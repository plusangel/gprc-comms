// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platformCommunications.proto

#include "platformCommunications.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Alert_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HeightRequest_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MakeSafeRequest_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Quaternion_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StabilityRequest_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StateRequest_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3D_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Map_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TargetRequest_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_InitializationRequest_platformCommunications_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Pose_platformCommunications_2eproto;
namespace platformcomms {
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request> _instance;
  const ::platformcomms::InitializationRequest* initializationrequest_;
  const ::platformcomms::TargetRequest* targetrequest_;
  const ::platformcomms::StabilityRequest* stabilityrequest_;
  const ::platformcomms::MakeSafeRequest* makesaferequest_;
  const ::platformcomms::StateRequest* staterequest_;
  const ::platformcomms::HeightRequest* heightrequest_;
} _Request_default_instance_;
class HeightRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeightRequest> _instance;
} _HeightRequest_default_instance_;
class InitializationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitializationRequest> _instance;
} _InitializationRequest_default_instance_;
class MakeSafeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MakeSafeRequest> _instance;
} _MakeSafeRequest_default_instance_;
class StabilityRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StabilityRequest> _instance;
} _StabilityRequest_default_instance_;
class StateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateRequest> _instance;
} _StateRequest_default_instance_;
class TargetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetRequest> _instance;
} _TargetRequest_default_instance_;
class PoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pose> _instance;
} _Pose_default_instance_;
class QuaternionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quaternion> _instance;
} _Quaternion_default_instance_;
class Vector3DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3D> _instance;
} _Vector3D_default_instance_;
class MapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Map> _instance;
} _Map_default_instance_;
class AlertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Alert> _instance;
} _Alert_default_instance_;
class PlatformStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlatformState> _instance;
} _PlatformState_default_instance_;
}  // namespace platformcomms
static void InitDefaultsRequest_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_Request_default_instance_;
    new (ptr) ::platformcomms::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Request_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsRequest_platformCommunications_2eproto}, {
      &scc_info_InitializationRequest_platformCommunications_2eproto.base,
      &scc_info_TargetRequest_platformCommunications_2eproto.base,
      &scc_info_StabilityRequest_platformCommunications_2eproto.base,
      &scc_info_MakeSafeRequest_platformCommunications_2eproto.base,
      &scc_info_StateRequest_platformCommunications_2eproto.base,
      &scc_info_HeightRequest_platformCommunications_2eproto.base,}};

static void InitDefaultsHeightRequest_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_HeightRequest_default_instance_;
    new (ptr) ::platformcomms::HeightRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::HeightRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeightRequest_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeightRequest_platformCommunications_2eproto}, {}};

static void InitDefaultsInitializationRequest_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_InitializationRequest_default_instance_;
    new (ptr) ::platformcomms::InitializationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::InitializationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InitializationRequest_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInitializationRequest_platformCommunications_2eproto}, {
      &scc_info_Pose_platformCommunications_2eproto.base,
      &scc_info_Map_platformCommunications_2eproto.base,}};

static void InitDefaultsMakeSafeRequest_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_MakeSafeRequest_default_instance_;
    new (ptr) ::platformcomms::MakeSafeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::MakeSafeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MakeSafeRequest_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMakeSafeRequest_platformCommunications_2eproto}, {}};

static void InitDefaultsStabilityRequest_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_StabilityRequest_default_instance_;
    new (ptr) ::platformcomms::StabilityRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::StabilityRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StabilityRequest_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStabilityRequest_platformCommunications_2eproto}, {}};

static void InitDefaultsStateRequest_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_StateRequest_default_instance_;
    new (ptr) ::platformcomms::StateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::StateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StateRequest_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStateRequest_platformCommunications_2eproto}, {}};

static void InitDefaultsTargetRequest_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_TargetRequest_default_instance_;
    new (ptr) ::platformcomms::TargetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::TargetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TargetRequest_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTargetRequest_platformCommunications_2eproto}, {
      &scc_info_Pose_platformCommunications_2eproto.base,}};

static void InitDefaultsPose_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_Pose_default_instance_;
    new (ptr) ::platformcomms::Pose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::Pose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Pose_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPose_platformCommunications_2eproto}, {
      &scc_info_Vector3D_platformCommunications_2eproto.base,
      &scc_info_Quaternion_platformCommunications_2eproto.base,}};

static void InitDefaultsQuaternion_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_Quaternion_default_instance_;
    new (ptr) ::platformcomms::Quaternion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::Quaternion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Quaternion_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuaternion_platformCommunications_2eproto}, {}};

static void InitDefaultsVector3D_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_Vector3D_default_instance_;
    new (ptr) ::platformcomms::Vector3D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::Vector3D::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector3D_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector3D_platformCommunications_2eproto}, {}};

static void InitDefaultsMap_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_Map_default_instance_;
    new (ptr) ::platformcomms::Map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::Map::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Map_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMap_platformCommunications_2eproto}, {
      &scc_info_Vector3D_platformCommunications_2eproto.base,}};

static void InitDefaultsAlert_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_Alert_default_instance_;
    new (ptr) ::platformcomms::Alert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::Alert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Alert_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlert_platformCommunications_2eproto}, {}};

static void InitDefaultsPlatformState_platformCommunications_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::platformcomms::_PlatformState_default_instance_;
    new (ptr) ::platformcomms::PlatformState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::platformcomms::PlatformState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PlatformState_platformCommunications_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPlatformState_platformCommunications_2eproto}, {
      &scc_info_Pose_platformCommunications_2eproto.base,
      &scc_info_Alert_platformCommunications_2eproto.base,}};

void InitDefaults_platformCommunications_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Request_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeightRequest_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InitializationRequest_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MakeSafeRequest_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StabilityRequest_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StateRequest_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetRequest_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pose_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Quaternion_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vector3D_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Map_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Alert_platformCommunications_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlatformState_platformCommunications_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_platformCommunications_2eproto[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_platformCommunications_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_platformCommunications_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_platformCommunications_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::platformcomms::RequestDefaultTypeInternal, initializationrequest_),
  offsetof(::platformcomms::RequestDefaultTypeInternal, targetrequest_),
  offsetof(::platformcomms::RequestDefaultTypeInternal, stabilityrequest_),
  offsetof(::platformcomms::RequestDefaultTypeInternal, makesaferequest_),
  offsetof(::platformcomms::RequestDefaultTypeInternal, staterequest_),
  offsetof(::platformcomms::RequestDefaultTypeInternal, heightrequest_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Request, subtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::HeightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::HeightRequest, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::InitializationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::InitializationRequest, approximatepose_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::InitializationRequest, approximatemap_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::MakeSafeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::MakeSafeRequest, makesafe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::StabilityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::StabilityRequest, stabilize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::StateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::StateRequest, getstate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::TargetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::TargetRequest, target_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Pose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Pose, position_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Pose, orientation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Quaternion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Quaternion, x_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Quaternion, y_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Quaternion, z_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Quaternion, r_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Vector3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Vector3D, x_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Vector3D, y_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Vector3D, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Map, imagewidth_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Map, imageheight_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Map, resolution_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Map, origin_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Map, localisationoccupiedthreshold_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Map, pathplanningoccupiedthreshold_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Alert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::Alert, title_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Alert, timestamp_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Alert, topic_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::Alert, severity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::platformcomms::PlatformState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::platformcomms::PlatformState, status_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::PlatformState, alertpose_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::PlatformState, liftheight_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::PlatformState, stable_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::PlatformState, batterylevel_),
  PROTOBUF_FIELD_OFFSET(::platformcomms::PlatformState, alerts_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::platformcomms::Request)},
  { 12, -1, sizeof(::platformcomms::HeightRequest)},
  { 18, -1, sizeof(::platformcomms::InitializationRequest)},
  { 25, -1, sizeof(::platformcomms::MakeSafeRequest)},
  { 31, -1, sizeof(::platformcomms::StabilityRequest)},
  { 37, -1, sizeof(::platformcomms::StateRequest)},
  { 43, -1, sizeof(::platformcomms::TargetRequest)},
  { 49, -1, sizeof(::platformcomms::Pose)},
  { 56, -1, sizeof(::platformcomms::Quaternion)},
  { 65, -1, sizeof(::platformcomms::Vector3D)},
  { 73, -1, sizeof(::platformcomms::Map)},
  { 84, -1, sizeof(::platformcomms::Alert)},
  { 93, -1, sizeof(::platformcomms::PlatformState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_HeightRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_InitializationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_MakeSafeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_StabilityRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_StateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_TargetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_Pose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_Quaternion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_Vector3D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_Map_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_Alert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::platformcomms::_PlatformState_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_platformCommunications_2eproto = {
  {}, AddDescriptors_platformCommunications_2eproto, "platformCommunications.proto", schemas,
  file_default_instances, TableStruct_platformCommunications_2eproto::offsets,
  file_level_metadata_platformCommunications_2eproto, 13, file_level_enum_descriptors_platformCommunications_2eproto, file_level_service_descriptors_platformCommunications_2eproto,
};

const char descriptor_table_protodef_platformCommunications_2eproto[] =
  "\n\034platformCommunications.proto\022\rplatform"
  "comms\"\366\002\n\007Request\022E\n\025InitializationReque"
  "st\030\n \001(\0132$.platformcomms.InitializationR"
  "equestH\000\0225\n\rTargetRequest\030\013 \001(\0132\034.platfo"
  "rmcomms.TargetRequestH\000\022;\n\020StabilityRequ"
  "est\030\014 \001(\0132\037.platformcomms.StabilityReque"
  "stH\000\0229\n\017MakeSafeRequest\030\r \001(\0132\036.platform"
  "comms.MakeSafeRequestH\000\0223\n\014StateRequest\030"
  "\016 \001(\0132\033.platformcomms.StateRequestH\000\0225\n\r"
  "HeightRequest\030\017 \001(\0132\034.platformcomms.Heig"
  "htRequestH\000B\t\n\007subtype\"\037\n\rHeightRequest\022"
  "\016\n\006Height\030\001 \001(\001\"q\n\025InitializationRequest"
  "\022,\n\017ApproximatePose\030\001 \001(\0132\023.platformcomm"
  "s.Pose\022*\n\016ApproximateMap\030\002 \001(\0132\022.platfor"
  "mcomms.Map\"#\n\017MakeSafeRequest\022\020\n\010MakeSaf"
  "e\030\001 \001(\010\"%\n\020StabilityRequest\022\021\n\tStabilize"
  "\030\001 \001(\010\" \n\014StateRequest\022\020\n\010GetState\030\001 \001(\010"
  "\"4\n\rTargetRequest\022#\n\006Target\030\001 \001(\0132\023.plat"
  "formcomms.Pose\"a\n\004Pose\022)\n\010Position\030\001 \001(\013"
  "2\027.platformcomms.Vector3D\022.\n\013Orientation"
  "\030\002 \001(\0132\031.platformcomms.Quaternion\"8\n\nQua"
  "ternion\022\t\n\001X\030\001 \001(\001\022\t\n\001Y\030\002 \001(\001\022\t\n\001Z\030\003 \001(\001"
  "\022\t\n\001R\030\004 \001(\001\"+\n\010Vector3D\022\t\n\001X\030\001 \001(\001\022\t\n\001Y\030"
  "\002 \001(\001\022\t\n\001Z\030\003 \001(\001\"\271\001\n\003Map\022\022\n\nImageWidth\030\002"
  " \001(\005\022\023\n\013ImageHeight\030\003 \001(\005\022\022\n\nResolution\030"
  "\004 \001(\001\022\'\n\006Origin\030\005 \001(\0132\027.platformcomms.Ve"
  "ctor3D\022%\n\035LocalisationOccupiedThreshold\030"
  "\006 \001(\001\022%\n\035PathPlanningOccupiedThreshold\030\007"
  " \001(\001\"e\n\005Alert\022\r\n\005Title\030\001 \001(\t\022\021\n\tTimeStam"
  "p\030\002 \001(\003\022\r\n\005Topic\030\003 \001(\t\022+\n\010Severity\030\004 \001(\016"
  "2\031.platformcomms.AlertLevel\"\276\001\n\rPlatform"
  "State\022%\n\006Status\030\001 \001(\0162\025.platformcomms.St"
  "atus\022&\n\tAlertPose\030\002 \001(\0132\023.platformcomms."
  "Pose\022\022\n\nLiftHeight\030\003 \001(\001\022\016\n\006Stable\030\004 \001(\010"
  "\022\024\n\014BatteryLevel\030\005 \001(\002\022$\n\006Alerts\030\006 \003(\0132\024"
  ".platformcomms.Alert*D\n\nAlertLevel\022\010\n\004No"
  "ne\020\000\022\010\n\004Info\020\001\022\n\n\006Remark\020\002\022\013\n\007Warning\020\003\022"
  "\t\n\005Error\020\004*M\n\006Status\022\013\n\007Unknown\020\000\022\013\n\007Fau"
  "lted\020\001\022\021\n\rUninitialized\020\002\022\t\n\005Ready\020\003\022\013\n\007"
  "Running\020\0042\335\003\n\026PlatformCommunications\022P\n\n"
  "Initialize\022$.platformcomms.Initializatio"
  "nRequest\032\034.platformcomms.PlatformState\022J"
  "\n\nGoToTarget\022\034.platformcomms.TargetReque"
  "st\032\034.platformcomms.PlatformState0\001\022H\n\nGo"
  "ToHeight\022\034.platformcomms.HeightRequest\032\034"
  ".platformcomms.PlatformState\022J\n\tStabiliz"
  "e\022\037.platformcomms.StabilityRequest\032\034.pla"
  "tformcomms.PlatformState\022H\n\010MakeSafe\022\036.p"
  "latformcomms.MakeSafeRequest\032\034.platformc"
  "omms.PlatformState\022E\n\010GetState\022\033.platfor"
  "mcomms.StateRequest\032\034.platformcomms.Plat"
  "formStateb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_platformCommunications_2eproto = {
  false, InitDefaults_platformCommunications_2eproto, 
  descriptor_table_protodef_platformCommunications_2eproto,
  "platformCommunications.proto", &assign_descriptors_table_platformCommunications_2eproto, 2057,
};

void AddDescriptors_platformCommunications_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_platformCommunications_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_platformCommunications_2eproto = []() { AddDescriptors_platformCommunications_2eproto(); return true; }();
namespace platformcomms {
const ::google::protobuf::EnumDescriptor* AlertLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_platformCommunications_2eproto);
  return file_level_enum_descriptors_platformCommunications_2eproto[0];
}
bool AlertLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_platformCommunications_2eproto);
  return file_level_enum_descriptors_platformCommunications_2eproto[1];
}
bool Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::platformcomms::_Request_default_instance_.initializationrequest_ = const_cast< ::platformcomms::InitializationRequest*>(
      ::platformcomms::InitializationRequest::internal_default_instance());
  ::platformcomms::_Request_default_instance_.targetrequest_ = const_cast< ::platformcomms::TargetRequest*>(
      ::platformcomms::TargetRequest::internal_default_instance());
  ::platformcomms::_Request_default_instance_.stabilityrequest_ = const_cast< ::platformcomms::StabilityRequest*>(
      ::platformcomms::StabilityRequest::internal_default_instance());
  ::platformcomms::_Request_default_instance_.makesaferequest_ = const_cast< ::platformcomms::MakeSafeRequest*>(
      ::platformcomms::MakeSafeRequest::internal_default_instance());
  ::platformcomms::_Request_default_instance_.staterequest_ = const_cast< ::platformcomms::StateRequest*>(
      ::platformcomms::StateRequest::internal_default_instance());
  ::platformcomms::_Request_default_instance_.heightrequest_ = const_cast< ::platformcomms::HeightRequest*>(
      ::platformcomms::HeightRequest::internal_default_instance());
}
class Request::HasBitSetters {
 public:
  static const ::platformcomms::InitializationRequest& initializationrequest(const Request* msg);
  static const ::platformcomms::TargetRequest& targetrequest(const Request* msg);
  static const ::platformcomms::StabilityRequest& stabilityrequest(const Request* msg);
  static const ::platformcomms::MakeSafeRequest& makesaferequest(const Request* msg);
  static const ::platformcomms::StateRequest& staterequest(const Request* msg);
  static const ::platformcomms::HeightRequest& heightrequest(const Request* msg);
};

const ::platformcomms::InitializationRequest&
Request::HasBitSetters::initializationrequest(const Request* msg) {
  return *msg->subtype_.initializationrequest_;
}
const ::platformcomms::TargetRequest&
Request::HasBitSetters::targetrequest(const Request* msg) {
  return *msg->subtype_.targetrequest_;
}
const ::platformcomms::StabilityRequest&
Request::HasBitSetters::stabilityrequest(const Request* msg) {
  return *msg->subtype_.stabilityrequest_;
}
const ::platformcomms::MakeSafeRequest&
Request::HasBitSetters::makesaferequest(const Request* msg) {
  return *msg->subtype_.makesaferequest_;
}
const ::platformcomms::StateRequest&
Request::HasBitSetters::staterequest(const Request* msg) {
  return *msg->subtype_.staterequest_;
}
const ::platformcomms::HeightRequest&
Request::HasBitSetters::heightrequest(const Request* msg) {
  return *msg->subtype_.heightrequest_;
}
void Request::set_allocated_initializationrequest(::platformcomms::InitializationRequest* initializationrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subtype();
  if (initializationrequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      initializationrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, initializationrequest, submessage_arena);
    }
    set_has_initializationrequest();
    subtype_.initializationrequest_ = initializationrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Request.InitializationRequest)
}
void Request::set_allocated_targetrequest(::platformcomms::TargetRequest* targetrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subtype();
  if (targetrequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      targetrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, targetrequest, submessage_arena);
    }
    set_has_targetrequest();
    subtype_.targetrequest_ = targetrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Request.TargetRequest)
}
void Request::set_allocated_stabilityrequest(::platformcomms::StabilityRequest* stabilityrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subtype();
  if (stabilityrequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stabilityrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stabilityrequest, submessage_arena);
    }
    set_has_stabilityrequest();
    subtype_.stabilityrequest_ = stabilityrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Request.StabilityRequest)
}
void Request::set_allocated_makesaferequest(::platformcomms::MakeSafeRequest* makesaferequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subtype();
  if (makesaferequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      makesaferequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, makesaferequest, submessage_arena);
    }
    set_has_makesaferequest();
    subtype_.makesaferequest_ = makesaferequest;
  }
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Request.MakeSafeRequest)
}
void Request::set_allocated_staterequest(::platformcomms::StateRequest* staterequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subtype();
  if (staterequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      staterequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, staterequest, submessage_arena);
    }
    set_has_staterequest();
    subtype_.staterequest_ = staterequest;
  }
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Request.StateRequest)
}
void Request::set_allocated_heightrequest(::platformcomms::HeightRequest* heightrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subtype();
  if (heightrequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      heightrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, heightrequest, submessage_arena);
    }
    set_has_heightrequest();
    subtype_.heightrequest_ = heightrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Request.HeightRequest)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kInitializationRequestFieldNumber;
const int Request::kTargetRequestFieldNumber;
const int Request::kStabilityRequestFieldNumber;
const int Request::kMakeSafeRequestFieldNumber;
const int Request::kStateRequestFieldNumber;
const int Request::kHeightRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_subtype();
  switch (from.subtype_case()) {
    case kInitializationRequest: {
      mutable_initializationrequest()->::platformcomms::InitializationRequest::MergeFrom(from.initializationrequest());
      break;
    }
    case kTargetRequest: {
      mutable_targetrequest()->::platformcomms::TargetRequest::MergeFrom(from.targetrequest());
      break;
    }
    case kStabilityRequest: {
      mutable_stabilityrequest()->::platformcomms::StabilityRequest::MergeFrom(from.stabilityrequest());
      break;
    }
    case kMakeSafeRequest: {
      mutable_makesaferequest()->::platformcomms::MakeSafeRequest::MergeFrom(from.makesaferequest());
      break;
    }
    case kStateRequest: {
      mutable_staterequest()->::platformcomms::StateRequest::MergeFrom(from.staterequest());
      break;
    }
    case kHeightRequest: {
      mutable_heightrequest()->::platformcomms::HeightRequest::MergeFrom(from.heightrequest());
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:platformcomms.Request)
}

void Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Request_platformCommunications_2eproto.base);
  clear_has_subtype();
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:platformcomms.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (has_subtype()) {
    clear_subtype();
  }
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Request_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void Request::clear_subtype() {
// @@protoc_insertion_point(one_of_clear_start:platformcomms.Request)
  switch (subtype_case()) {
    case kInitializationRequest: {
      delete subtype_.initializationrequest_;
      break;
    }
    case kTargetRequest: {
      delete subtype_.targetrequest_;
      break;
    }
    case kStabilityRequest: {
      delete subtype_.stabilityrequest_;
      break;
    }
    case kMakeSafeRequest: {
      delete subtype_.makesaferequest_;
      break;
    }
    case kStateRequest: {
      delete subtype_.staterequest_;
      break;
    }
    case kHeightRequest: {
      delete subtype_.heightrequest_;
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUBTYPE_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_subtype();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .platformcomms.InitializationRequest InitializationRequest = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::InitializationRequest::_InternalParse;
        object = msg->mutable_initializationrequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .platformcomms.TargetRequest TargetRequest = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::TargetRequest::_InternalParse;
        object = msg->mutable_targetrequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .platformcomms.StabilityRequest StabilityRequest = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::StabilityRequest::_InternalParse;
        object = msg->mutable_stabilityrequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .platformcomms.MakeSafeRequest MakeSafeRequest = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::MakeSafeRequest::_InternalParse;
        object = msg->mutable_makesaferequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .platformcomms.StateRequest StateRequest = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::StateRequest::_InternalParse;
        object = msg->mutable_staterequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .platformcomms.HeightRequest HeightRequest = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::HeightRequest::_InternalParse;
        object = msg->mutable_heightrequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .platformcomms.InitializationRequest InitializationRequest = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_initializationrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.TargetRequest TargetRequest = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_targetrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.StabilityRequest StabilityRequest = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stabilityrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.MakeSafeRequest MakeSafeRequest = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_makesaferequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.StateRequest StateRequest = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_staterequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.HeightRequest HeightRequest = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_heightrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.InitializationRequest InitializationRequest = 10;
  if (has_initializationrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::initializationrequest(this), output);
  }

  // .platformcomms.TargetRequest TargetRequest = 11;
  if (has_targetrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::targetrequest(this), output);
  }

  // .platformcomms.StabilityRequest StabilityRequest = 12;
  if (has_stabilityrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::stabilityrequest(this), output);
  }

  // .platformcomms.MakeSafeRequest MakeSafeRequest = 13;
  if (has_makesaferequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::makesaferequest(this), output);
  }

  // .platformcomms.StateRequest StateRequest = 14;
  if (has_staterequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::staterequest(this), output);
  }

  // .platformcomms.HeightRequest HeightRequest = 15;
  if (has_heightrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::heightrequest(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.InitializationRequest InitializationRequest = 10;
  if (has_initializationrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::initializationrequest(this), target);
  }

  // .platformcomms.TargetRequest TargetRequest = 11;
  if (has_targetrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::targetrequest(this), target);
  }

  // .platformcomms.StabilityRequest StabilityRequest = 12;
  if (has_stabilityrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::stabilityrequest(this), target);
  }

  // .platformcomms.MakeSafeRequest MakeSafeRequest = 13;
  if (has_makesaferequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::makesaferequest(this), target);
  }

  // .platformcomms.StateRequest StateRequest = 14;
  if (has_staterequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::staterequest(this), target);
  }

  // .platformcomms.HeightRequest HeightRequest = 15;
  if (has_heightrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::heightrequest(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (subtype_case()) {
    // .platformcomms.InitializationRequest InitializationRequest = 10;
    case kInitializationRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subtype_.initializationrequest_);
      break;
    }
    // .platformcomms.TargetRequest TargetRequest = 11;
    case kTargetRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subtype_.targetrequest_);
      break;
    }
    // .platformcomms.StabilityRequest StabilityRequest = 12;
    case kStabilityRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subtype_.stabilityrequest_);
      break;
    }
    // .platformcomms.MakeSafeRequest MakeSafeRequest = 13;
    case kMakeSafeRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subtype_.makesaferequest_);
      break;
    }
    // .platformcomms.StateRequest StateRequest = 14;
    case kStateRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subtype_.staterequest_);
      break;
    }
    // .platformcomms.HeightRequest HeightRequest = 15;
    case kHeightRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subtype_.heightrequest_);
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::DynamicCastToGenerated<Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.subtype_case()) {
    case kInitializationRequest: {
      mutable_initializationrequest()->::platformcomms::InitializationRequest::MergeFrom(from.initializationrequest());
      break;
    }
    case kTargetRequest: {
      mutable_targetrequest()->::platformcomms::TargetRequest::MergeFrom(from.targetrequest());
      break;
    }
    case kStabilityRequest: {
      mutable_stabilityrequest()->::platformcomms::StabilityRequest::MergeFrom(from.stabilityrequest());
      break;
    }
    case kMakeSafeRequest: {
      mutable_makesaferequest()->::platformcomms::MakeSafeRequest::MergeFrom(from.makesaferequest());
      break;
    }
    case kStateRequest: {
      mutable_staterequest()->::platformcomms::StateRequest::MergeFrom(from.staterequest());
      break;
    }
    case kHeightRequest: {
      mutable_heightrequest()->::platformcomms::HeightRequest::MergeFrom(from.heightrequest());
      break;
    }
    case SUBTYPE_NOT_SET: {
      break;
    }
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(subtype_, other->subtype_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HeightRequest::InitAsDefaultInstance() {
}
class HeightRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeightRequest::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeightRequest::HeightRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.HeightRequest)
}
HeightRequest::HeightRequest(const HeightRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:platformcomms.HeightRequest)
}

void HeightRequest::SharedCtor() {
  height_ = 0;
}

HeightRequest::~HeightRequest() {
  // @@protoc_insertion_point(destructor:platformcomms.HeightRequest)
  SharedDtor();
}

void HeightRequest::SharedDtor() {
}

void HeightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeightRequest& HeightRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HeightRequest_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void HeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.HeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  height_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HeightRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HeightRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double Height = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_height(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HeightRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.HeightRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double Height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.HeightRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.HeightRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HeightRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.HeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double Height = 1;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.HeightRequest)
}

::google::protobuf::uint8* HeightRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.HeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double Height = 1;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.HeightRequest)
  return target;
}

size_t HeightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.HeightRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double Height = 1;
  if (this->height() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeightRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.HeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HeightRequest* source =
      ::google::protobuf::DynamicCastToGenerated<HeightRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.HeightRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.HeightRequest)
    MergeFrom(*source);
  }
}

void HeightRequest::MergeFrom(const HeightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.HeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.height() != 0) {
    set_height(from.height());
  }
}

void HeightRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.HeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeightRequest::CopyFrom(const HeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.HeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeightRequest::IsInitialized() const {
  return true;
}

void HeightRequest::Swap(HeightRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeightRequest::InternalSwap(HeightRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(height_, other->height_);
}

::google::protobuf::Metadata HeightRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InitializationRequest::InitAsDefaultInstance() {
  ::platformcomms::_InitializationRequest_default_instance_._instance.get_mutable()->approximatepose_ = const_cast< ::platformcomms::Pose*>(
      ::platformcomms::Pose::internal_default_instance());
  ::platformcomms::_InitializationRequest_default_instance_._instance.get_mutable()->approximatemap_ = const_cast< ::platformcomms::Map*>(
      ::platformcomms::Map::internal_default_instance());
}
class InitializationRequest::HasBitSetters {
 public:
  static const ::platformcomms::Pose& approximatepose(const InitializationRequest* msg);
  static const ::platformcomms::Map& approximatemap(const InitializationRequest* msg);
};

const ::platformcomms::Pose&
InitializationRequest::HasBitSetters::approximatepose(const InitializationRequest* msg) {
  return *msg->approximatepose_;
}
const ::platformcomms::Map&
InitializationRequest::HasBitSetters::approximatemap(const InitializationRequest* msg) {
  return *msg->approximatemap_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitializationRequest::kApproximatePoseFieldNumber;
const int InitializationRequest::kApproximateMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitializationRequest::InitializationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.InitializationRequest)
}
InitializationRequest::InitializationRequest(const InitializationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_approximatepose()) {
    approximatepose_ = new ::platformcomms::Pose(*from.approximatepose_);
  } else {
    approximatepose_ = nullptr;
  }
  if (from.has_approximatemap()) {
    approximatemap_ = new ::platformcomms::Map(*from.approximatemap_);
  } else {
    approximatemap_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:platformcomms.InitializationRequest)
}

void InitializationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InitializationRequest_platformCommunications_2eproto.base);
  ::memset(&approximatepose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&approximatemap_) -
      reinterpret_cast<char*>(&approximatepose_)) + sizeof(approximatemap_));
}

InitializationRequest::~InitializationRequest() {
  // @@protoc_insertion_point(destructor:platformcomms.InitializationRequest)
  SharedDtor();
}

void InitializationRequest::SharedDtor() {
  if (this != internal_default_instance()) delete approximatepose_;
  if (this != internal_default_instance()) delete approximatemap_;
}

void InitializationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InitializationRequest& InitializationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InitializationRequest_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void InitializationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.InitializationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && approximatepose_ != nullptr) {
    delete approximatepose_;
  }
  approximatepose_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && approximatemap_ != nullptr) {
    delete approximatemap_;
  }
  approximatemap_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InitializationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InitializationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .platformcomms.Pose ApproximatePose = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::Pose::_InternalParse;
        object = msg->mutable_approximatepose();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .platformcomms.Map ApproximateMap = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::Map::_InternalParse;
        object = msg->mutable_approximatemap();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InitializationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.InitializationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .platformcomms.Pose ApproximatePose = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_approximatepose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.Map ApproximateMap = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_approximatemap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.InitializationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.InitializationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InitializationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.InitializationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.Pose ApproximatePose = 1;
  if (this->has_approximatepose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::approximatepose(this), output);
  }

  // .platformcomms.Map ApproximateMap = 2;
  if (this->has_approximatemap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::approximatemap(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.InitializationRequest)
}

::google::protobuf::uint8* InitializationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.InitializationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.Pose ApproximatePose = 1;
  if (this->has_approximatepose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::approximatepose(this), target);
  }

  // .platformcomms.Map ApproximateMap = 2;
  if (this->has_approximatemap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::approximatemap(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.InitializationRequest)
  return target;
}

size_t InitializationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.InitializationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .platformcomms.Pose ApproximatePose = 1;
  if (this->has_approximatepose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *approximatepose_);
  }

  // .platformcomms.Map ApproximateMap = 2;
  if (this->has_approximatemap()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *approximatemap_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitializationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.InitializationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InitializationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<InitializationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.InitializationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.InitializationRequest)
    MergeFrom(*source);
  }
}

void InitializationRequest::MergeFrom(const InitializationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.InitializationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_approximatepose()) {
    mutable_approximatepose()->::platformcomms::Pose::MergeFrom(from.approximatepose());
  }
  if (from.has_approximatemap()) {
    mutable_approximatemap()->::platformcomms::Map::MergeFrom(from.approximatemap());
  }
}

void InitializationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.InitializationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitializationRequest::CopyFrom(const InitializationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.InitializationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitializationRequest::IsInitialized() const {
  return true;
}

void InitializationRequest::Swap(InitializationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitializationRequest::InternalSwap(InitializationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(approximatepose_, other->approximatepose_);
  swap(approximatemap_, other->approximatemap_);
}

::google::protobuf::Metadata InitializationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MakeSafeRequest::InitAsDefaultInstance() {
}
class MakeSafeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MakeSafeRequest::kMakeSafeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MakeSafeRequest::MakeSafeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.MakeSafeRequest)
}
MakeSafeRequest::MakeSafeRequest(const MakeSafeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  makesafe_ = from.makesafe_;
  // @@protoc_insertion_point(copy_constructor:platformcomms.MakeSafeRequest)
}

void MakeSafeRequest::SharedCtor() {
  makesafe_ = false;
}

MakeSafeRequest::~MakeSafeRequest() {
  // @@protoc_insertion_point(destructor:platformcomms.MakeSafeRequest)
  SharedDtor();
}

void MakeSafeRequest::SharedDtor() {
}

void MakeSafeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MakeSafeRequest& MakeSafeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MakeSafeRequest_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void MakeSafeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.MakeSafeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  makesafe_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MakeSafeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MakeSafeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool MakeSafe = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_makesafe(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MakeSafeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.MakeSafeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool MakeSafe = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &makesafe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.MakeSafeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.MakeSafeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MakeSafeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.MakeSafeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool MakeSafe = 1;
  if (this->makesafe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->makesafe(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.MakeSafeRequest)
}

::google::protobuf::uint8* MakeSafeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.MakeSafeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool MakeSafe = 1;
  if (this->makesafe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->makesafe(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.MakeSafeRequest)
  return target;
}

size_t MakeSafeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.MakeSafeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool MakeSafe = 1;
  if (this->makesafe() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MakeSafeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.MakeSafeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MakeSafeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MakeSafeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.MakeSafeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.MakeSafeRequest)
    MergeFrom(*source);
  }
}

void MakeSafeRequest::MergeFrom(const MakeSafeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.MakeSafeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.makesafe() != 0) {
    set_makesafe(from.makesafe());
  }
}

void MakeSafeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.MakeSafeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MakeSafeRequest::CopyFrom(const MakeSafeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.MakeSafeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeSafeRequest::IsInitialized() const {
  return true;
}

void MakeSafeRequest::Swap(MakeSafeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MakeSafeRequest::InternalSwap(MakeSafeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(makesafe_, other->makesafe_);
}

::google::protobuf::Metadata MakeSafeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StabilityRequest::InitAsDefaultInstance() {
}
class StabilityRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StabilityRequest::kStabilizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StabilityRequest::StabilityRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.StabilityRequest)
}
StabilityRequest::StabilityRequest(const StabilityRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stabilize_ = from.stabilize_;
  // @@protoc_insertion_point(copy_constructor:platformcomms.StabilityRequest)
}

void StabilityRequest::SharedCtor() {
  stabilize_ = false;
}

StabilityRequest::~StabilityRequest() {
  // @@protoc_insertion_point(destructor:platformcomms.StabilityRequest)
  SharedDtor();
}

void StabilityRequest::SharedDtor() {
}

void StabilityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StabilityRequest& StabilityRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StabilityRequest_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void StabilityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.StabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stabilize_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StabilityRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StabilityRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool Stabilize = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_stabilize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StabilityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.StabilityRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Stabilize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stabilize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.StabilityRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.StabilityRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StabilityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.StabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Stabilize = 1;
  if (this->stabilize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->stabilize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.StabilityRequest)
}

::google::protobuf::uint8* StabilityRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.StabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Stabilize = 1;
  if (this->stabilize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->stabilize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.StabilityRequest)
  return target;
}

size_t StabilityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.StabilityRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool Stabilize = 1;
  if (this->stabilize() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StabilityRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.StabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StabilityRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StabilityRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.StabilityRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.StabilityRequest)
    MergeFrom(*source);
  }
}

void StabilityRequest::MergeFrom(const StabilityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.StabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stabilize() != 0) {
    set_stabilize(from.stabilize());
  }
}

void StabilityRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.StabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StabilityRequest::CopyFrom(const StabilityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.StabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StabilityRequest::IsInitialized() const {
  return true;
}

void StabilityRequest::Swap(StabilityRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StabilityRequest::InternalSwap(StabilityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(stabilize_, other->stabilize_);
}

::google::protobuf::Metadata StabilityRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StateRequest::InitAsDefaultInstance() {
}
class StateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateRequest::kGetStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateRequest::StateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.StateRequest)
}
StateRequest::StateRequest(const StateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  getstate_ = from.getstate_;
  // @@protoc_insertion_point(copy_constructor:platformcomms.StateRequest)
}

void StateRequest::SharedCtor() {
  getstate_ = false;
}

StateRequest::~StateRequest() {
  // @@protoc_insertion_point(destructor:platformcomms.StateRequest)
  SharedDtor();
}

void StateRequest::SharedDtor() {
}

void StateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateRequest& StateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StateRequest_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void StateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.StateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  getstate_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool GetState = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_getstate(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.StateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool GetState = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.StateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.StateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.StateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool GetState = 1;
  if (this->getstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->getstate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.StateRequest)
}

::google::protobuf::uint8* StateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.StateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool GetState = 1;
  if (this->getstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->getstate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.StateRequest)
  return target;
}

size_t StateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.StateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool GetState = 1;
  if (this->getstate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.StateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.StateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.StateRequest)
    MergeFrom(*source);
  }
}

void StateRequest::MergeFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.StateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.getstate() != 0) {
    set_getstate(from.getstate());
  }
}

void StateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateRequest::CopyFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateRequest::IsInitialized() const {
  return true;
}

void StateRequest::Swap(StateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateRequest::InternalSwap(StateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(getstate_, other->getstate_);
}

::google::protobuf::Metadata StateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TargetRequest::InitAsDefaultInstance() {
  ::platformcomms::_TargetRequest_default_instance_._instance.get_mutable()->target_ = const_cast< ::platformcomms::Pose*>(
      ::platformcomms::Pose::internal_default_instance());
}
class TargetRequest::HasBitSetters {
 public:
  static const ::platformcomms::Pose& target(const TargetRequest* msg);
};

const ::platformcomms::Pose&
TargetRequest::HasBitSetters::target(const TargetRequest* msg) {
  return *msg->target_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetRequest::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetRequest::TargetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.TargetRequest)
}
TargetRequest::TargetRequest(const TargetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target()) {
    target_ = new ::platformcomms::Pose(*from.target_);
  } else {
    target_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:platformcomms.TargetRequest)
}

void TargetRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TargetRequest_platformCommunications_2eproto.base);
  target_ = nullptr;
}

TargetRequest::~TargetRequest() {
  // @@protoc_insertion_point(destructor:platformcomms.TargetRequest)
  SharedDtor();
}

void TargetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete target_;
}

void TargetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TargetRequest& TargetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TargetRequest_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void TargetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.TargetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TargetRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TargetRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .platformcomms.Pose Target = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::Pose::_InternalParse;
        object = msg->mutable_target();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TargetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.TargetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .platformcomms.Pose Target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.TargetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.TargetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TargetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.TargetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.Pose Target = 1;
  if (this->has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::target(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.TargetRequest)
}

::google::protobuf::uint8* TargetRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.TargetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.Pose Target = 1;
  if (this->has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::target(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.TargetRequest)
  return target;
}

size_t TargetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.TargetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .platformcomms.Pose Target = 1;
  if (this->has_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.TargetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TargetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.TargetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.TargetRequest)
    MergeFrom(*source);
  }
}

void TargetRequest::MergeFrom(const TargetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.TargetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target()) {
    mutable_target()->::platformcomms::Pose::MergeFrom(from.target());
  }
}

void TargetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.TargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetRequest::CopyFrom(const TargetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.TargetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetRequest::IsInitialized() const {
  return true;
}

void TargetRequest::Swap(TargetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetRequest::InternalSwap(TargetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(target_, other->target_);
}

::google::protobuf::Metadata TargetRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Pose::InitAsDefaultInstance() {
  ::platformcomms::_Pose_default_instance_._instance.get_mutable()->position_ = const_cast< ::platformcomms::Vector3D*>(
      ::platformcomms::Vector3D::internal_default_instance());
  ::platformcomms::_Pose_default_instance_._instance.get_mutable()->orientation_ = const_cast< ::platformcomms::Quaternion*>(
      ::platformcomms::Quaternion::internal_default_instance());
}
class Pose::HasBitSetters {
 public:
  static const ::platformcomms::Vector3D& position(const Pose* msg);
  static const ::platformcomms::Quaternion& orientation(const Pose* msg);
};

const ::platformcomms::Vector3D&
Pose::HasBitSetters::position(const Pose* msg) {
  return *msg->position_;
}
const ::platformcomms::Quaternion&
Pose::HasBitSetters::orientation(const Pose* msg) {
  return *msg->orientation_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pose::kPositionFieldNumber;
const int Pose::kOrientationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pose::Pose()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.Pose)
}
Pose::Pose(const Pose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::platformcomms::Vector3D(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from.has_orientation()) {
    orientation_ = new ::platformcomms::Quaternion(*from.orientation_);
  } else {
    orientation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:platformcomms.Pose)
}

void Pose::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Pose_platformCommunications_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_) -
      reinterpret_cast<char*>(&position_)) + sizeof(orientation_));
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:platformcomms.Pose)
  SharedDtor();
}

void Pose::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete orientation_;
}

void Pose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pose& Pose::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Pose_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && orientation_ != nullptr) {
    delete orientation_;
  }
  orientation_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Pose::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Pose*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .platformcomms.Vector3D Position = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::Vector3D::_InternalParse;
        object = msg->mutable_position();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .platformcomms.Quaternion Orientation = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::Quaternion::_InternalParse;
        object = msg->mutable_orientation();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.Pose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .platformcomms.Vector3D Position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.Quaternion Orientation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.Pose)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.Vector3D Position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::position(this), output);
  }

  // .platformcomms.Quaternion Orientation = 2;
  if (this->has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::orientation(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.Pose)
}

::google::protobuf::uint8* Pose::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.Vector3D Position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::position(this), target);
  }

  // .platformcomms.Quaternion Orientation = 2;
  if (this->has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::orientation(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.Pose)
  return target;
}

size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.Pose)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .platformcomms.Vector3D Position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .platformcomms.Quaternion Orientation = 2;
  if (this->has_orientation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *orientation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  const Pose* source =
      ::google::protobuf::DynamicCastToGenerated<Pose>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.Pose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::platformcomms::Vector3D::MergeFrom(from.position());
  }
  if (from.has_orientation()) {
    mutable_orientation()->::platformcomms::Quaternion::MergeFrom(from.orientation());
  }
}

void Pose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {
  return true;
}

void Pose::Swap(Pose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pose::InternalSwap(Pose* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(orientation_, other->orientation_);
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Quaternion::InitAsDefaultInstance() {
}
class Quaternion::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quaternion::kXFieldNumber;
const int Quaternion::kYFieldNumber;
const int Quaternion::kZFieldNumber;
const int Quaternion::kRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quaternion::Quaternion()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.Quaternion)
}
Quaternion::Quaternion(const Quaternion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&r_) -
    reinterpret_cast<char*>(&x_)) + sizeof(r_));
  // @@protoc_insertion_point(copy_constructor:platformcomms.Quaternion)
}

void Quaternion::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&r_) -
      reinterpret_cast<char*>(&x_)) + sizeof(r_));
}

Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:platformcomms.Quaternion)
  SharedDtor();
}

void Quaternion::SharedDtor() {
}

void Quaternion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Quaternion& Quaternion::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Quaternion_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&r_) -
      reinterpret_cast<char*>(&x_)) + sizeof(r_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Quaternion::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Quaternion*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double X = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_x(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double Y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_y(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double Z = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_z(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double R = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_r(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Quaternion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.Quaternion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double X = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double R = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.Quaternion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.Quaternion)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Quaternion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double X = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double Y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double Z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // double R = 4;
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->r(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.Quaternion)
}

::google::protobuf::uint8* Quaternion::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double X = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double Y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double Z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // double R = 4;
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->r(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.Quaternion)
  return target;
}

size_t Quaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.Quaternion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double X = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double Y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double Z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  // double R = 4;
  if (this->r() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Quaternion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.Quaternion)
  GOOGLE_DCHECK_NE(&from, this);
  const Quaternion* source =
      ::google::protobuf::DynamicCastToGenerated<Quaternion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.Quaternion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.Quaternion)
    MergeFrom(*source);
  }
}

void Quaternion::MergeFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.Quaternion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.r() != 0) {
    set_r(from.r());
  }
}

void Quaternion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quaternion::IsInitialized() const {
  return true;
}

void Quaternion::Swap(Quaternion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quaternion::InternalSwap(Quaternion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(r_, other->r_);
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Vector3D::InitAsDefaultInstance() {
}
class Vector3D::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3D::kXFieldNumber;
const int Vector3D::kYFieldNumber;
const int Vector3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3D::Vector3D()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.Vector3D)
}
Vector3D::Vector3D(const Vector3D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:platformcomms.Vector3D)
}

void Vector3D::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vector3D::~Vector3D() {
  // @@protoc_insertion_point(destructor:platformcomms.Vector3D)
  SharedDtor();
}

void Vector3D::SharedDtor() {
}

void Vector3D::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vector3D& Vector3D::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Vector3D_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void Vector3D::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.Vector3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Vector3D::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Vector3D*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double X = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_x(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double Y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_y(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double Z = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_z(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Vector3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.Vector3D)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double X = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.Vector3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.Vector3D)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Vector3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.Vector3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double X = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double Y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double Z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.Vector3D)
}

::google::protobuf::uint8* Vector3D::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.Vector3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double X = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double Y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double Z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.Vector3D)
  return target;
}

size_t Vector3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.Vector3D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double X = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double Y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double Z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.Vector3D)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3D* source =
      ::google::protobuf::DynamicCastToGenerated<Vector3D>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.Vector3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.Vector3D)
    MergeFrom(*source);
  }
}

void Vector3D::MergeFrom(const Vector3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.Vector3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.Vector3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3D::CopyFrom(const Vector3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.Vector3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3D::IsInitialized() const {
  return true;
}

void Vector3D::Swap(Vector3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3D::InternalSwap(Vector3D* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
}

::google::protobuf::Metadata Vector3D::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Map::InitAsDefaultInstance() {
  ::platformcomms::_Map_default_instance_._instance.get_mutable()->origin_ = const_cast< ::platformcomms::Vector3D*>(
      ::platformcomms::Vector3D::internal_default_instance());
}
class Map::HasBitSetters {
 public:
  static const ::platformcomms::Vector3D& origin(const Map* msg);
};

const ::platformcomms::Vector3D&
Map::HasBitSetters::origin(const Map* msg) {
  return *msg->origin_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map::kImageWidthFieldNumber;
const int Map::kImageHeightFieldNumber;
const int Map::kResolutionFieldNumber;
const int Map::kOriginFieldNumber;
const int Map::kLocalisationOccupiedThresholdFieldNumber;
const int Map::kPathPlanningOccupiedThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map::Map()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.Map)
}
Map::Map(const Map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_origin()) {
    origin_ = new ::platformcomms::Vector3D(*from.origin_);
  } else {
    origin_ = nullptr;
  }
  ::memcpy(&imagewidth_, &from.imagewidth_,
    static_cast<size_t>(reinterpret_cast<char*>(&pathplanningoccupiedthreshold_) -
    reinterpret_cast<char*>(&imagewidth_)) + sizeof(pathplanningoccupiedthreshold_));
  // @@protoc_insertion_point(copy_constructor:platformcomms.Map)
}

void Map::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Map_platformCommunications_2eproto.base);
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pathplanningoccupiedthreshold_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(pathplanningoccupiedthreshold_));
}

Map::~Map() {
  // @@protoc_insertion_point(destructor:platformcomms.Map)
  SharedDtor();
}

void Map::SharedDtor() {
  if (this != internal_default_instance()) delete origin_;
}

void Map::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Map& Map::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Map_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void Map::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && origin_ != nullptr) {
    delete origin_;
  }
  origin_ = nullptr;
  ::memset(&imagewidth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pathplanningoccupiedthreshold_) -
      reinterpret_cast<char*>(&imagewidth_)) + sizeof(pathplanningoccupiedthreshold_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Map::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Map*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 ImageWidth = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_imagewidth(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 ImageHeight = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_imageheight(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double Resolution = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_resolution(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // .platformcomms.Vector3D Origin = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::Vector3D::_InternalParse;
        object = msg->mutable_origin();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // double LocalisationOccupiedThreshold = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 49) goto handle_unusual;
        msg->set_localisationoccupiedthreshold(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double PathPlanningOccupiedThreshold = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 57) goto handle_unusual;
        msg->set_pathplanningoccupiedthreshold(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.Map)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ImageWidth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &imagewidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ImageHeight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &imageheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Resolution = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.Vector3D Origin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LocalisationOccupiedThreshold = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (49 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &localisationoccupiedthreshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PathPlanningOccupiedThreshold = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (57 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pathplanningoccupiedthreshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.Map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.Map)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ImageWidth = 2;
  if (this->imagewidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->imagewidth(), output);
  }

  // int32 ImageHeight = 3;
  if (this->imageheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->imageheight(), output);
  }

  // double Resolution = 4;
  if (this->resolution() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->resolution(), output);
  }

  // .platformcomms.Vector3D Origin = 5;
  if (this->has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::origin(this), output);
  }

  // double LocalisationOccupiedThreshold = 6;
  if (this->localisationoccupiedthreshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->localisationoccupiedthreshold(), output);
  }

  // double PathPlanningOccupiedThreshold = 7;
  if (this->pathplanningoccupiedthreshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->pathplanningoccupiedthreshold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.Map)
}

::google::protobuf::uint8* Map::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ImageWidth = 2;
  if (this->imagewidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->imagewidth(), target);
  }

  // int32 ImageHeight = 3;
  if (this->imageheight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->imageheight(), target);
  }

  // double Resolution = 4;
  if (this->resolution() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->resolution(), target);
  }

  // .platformcomms.Vector3D Origin = 5;
  if (this->has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::origin(this), target);
  }

  // double LocalisationOccupiedThreshold = 6;
  if (this->localisationoccupiedthreshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->localisationoccupiedthreshold(), target);
  }

  // double PathPlanningOccupiedThreshold = 7;
  if (this->pathplanningoccupiedthreshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->pathplanningoccupiedthreshold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.Map)
  return target;
}

size_t Map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.Map)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .platformcomms.Vector3D Origin = 5;
  if (this->has_origin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  // int32 ImageWidth = 2;
  if (this->imagewidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->imagewidth());
  }

  // int32 ImageHeight = 3;
  if (this->imageheight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->imageheight());
  }

  // double Resolution = 4;
  if (this->resolution() != 0) {
    total_size += 1 + 8;
  }

  // double LocalisationOccupiedThreshold = 6;
  if (this->localisationoccupiedthreshold() != 0) {
    total_size += 1 + 8;
  }

  // double PathPlanningOccupiedThreshold = 7;
  if (this->pathplanningoccupiedthreshold() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.Map)
  GOOGLE_DCHECK_NE(&from, this);
  const Map* source =
      ::google::protobuf::DynamicCastToGenerated<Map>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.Map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.Map)
    MergeFrom(*source);
  }
}

void Map::MergeFrom(const Map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.Map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_origin()) {
    mutable_origin()->::platformcomms::Vector3D::MergeFrom(from.origin());
  }
  if (from.imagewidth() != 0) {
    set_imagewidth(from.imagewidth());
  }
  if (from.imageheight() != 0) {
    set_imageheight(from.imageheight());
  }
  if (from.resolution() != 0) {
    set_resolution(from.resolution());
  }
  if (from.localisationoccupiedthreshold() != 0) {
    set_localisationoccupiedthreshold(from.localisationoccupiedthreshold());
  }
  if (from.pathplanningoccupiedthreshold() != 0) {
    set_pathplanningoccupiedthreshold(from.pathplanningoccupiedthreshold());
  }
}

void Map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map::CopyFrom(const Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map::IsInitialized() const {
  return true;
}

void Map::Swap(Map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map::InternalSwap(Map* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(origin_, other->origin_);
  swap(imagewidth_, other->imagewidth_);
  swap(imageheight_, other->imageheight_);
  swap(resolution_, other->resolution_);
  swap(localisationoccupiedthreshold_, other->localisationoccupiedthreshold_);
  swap(pathplanningoccupiedthreshold_, other->pathplanningoccupiedthreshold_);
}

::google::protobuf::Metadata Map::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Alert::InitAsDefaultInstance() {
}
class Alert::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Alert::kTitleFieldNumber;
const int Alert::kTimeStampFieldNumber;
const int Alert::kTopicFieldNumber;
const int Alert::kSeverityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Alert::Alert()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.Alert)
}
Alert::Alert(const Alert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:platformcomms.Alert)
}

void Alert::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Alert_platformCommunications_2eproto.base);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(severity_));
}

Alert::~Alert() {
  // @@protoc_insertion_point(destructor:platformcomms.Alert)
  SharedDtor();
}

void Alert::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Alert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Alert& Alert::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Alert_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void Alert::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.Alert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(severity_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Alert::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Alert*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Title = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("platformcomms.Alert.Title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 TimeStamp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_timestamp(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Topic = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("platformcomms.Alert.Topic");
        object = msg->mutable_topic();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .platformcomms.AlertLevel Severity = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_severity(static_cast<::platformcomms::AlertLevel>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Alert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.Alert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platformcomms.Alert.Title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 TimeStamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Topic = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "platformcomms.Alert.Topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.AlertLevel Severity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::platformcomms::AlertLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.Alert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.Alert)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Alert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.Alert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platformcomms.Alert.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // int64 TimeStamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // string Topic = 3;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platformcomms.Alert.Topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->topic(), output);
  }

  // .platformcomms.AlertLevel Severity = 4;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->severity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.Alert)
}

::google::protobuf::uint8* Alert::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.Alert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platformcomms.Alert.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // int64 TimeStamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // string Topic = 3;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "platformcomms.Alert.Topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->topic(), target);
  }

  // .platformcomms.AlertLevel Severity = 4;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->severity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.Alert)
  return target;
}

size_t Alert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.Alert)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string Topic = 3;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // int64 TimeStamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // .platformcomms.AlertLevel Severity = 4;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Alert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.Alert)
  GOOGLE_DCHECK_NE(&from, this);
  const Alert* source =
      ::google::protobuf::DynamicCastToGenerated<Alert>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.Alert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.Alert)
    MergeFrom(*source);
  }
}

void Alert::MergeFrom(const Alert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.Alert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
}

void Alert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.Alert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Alert::CopyFrom(const Alert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.Alert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Alert::IsInitialized() const {
  return true;
}

void Alert::Swap(Alert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Alert::InternalSwap(Alert* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(severity_, other->severity_);
}

::google::protobuf::Metadata Alert::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PlatformState::InitAsDefaultInstance() {
  ::platformcomms::_PlatformState_default_instance_._instance.get_mutable()->alertpose_ = const_cast< ::platformcomms::Pose*>(
      ::platformcomms::Pose::internal_default_instance());
}
class PlatformState::HasBitSetters {
 public:
  static const ::platformcomms::Pose& alertpose(const PlatformState* msg);
};

const ::platformcomms::Pose&
PlatformState::HasBitSetters::alertpose(const PlatformState* msg) {
  return *msg->alertpose_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformState::kStatusFieldNumber;
const int PlatformState::kAlertPoseFieldNumber;
const int PlatformState::kLiftHeightFieldNumber;
const int PlatformState::kStableFieldNumber;
const int PlatformState::kBatteryLevelFieldNumber;
const int PlatformState::kAlertsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformState::PlatformState()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:platformcomms.PlatformState)
}
PlatformState::PlatformState(const PlatformState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      alerts_(from.alerts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_alertpose()) {
    alertpose_ = new ::platformcomms::Pose(*from.alertpose_);
  } else {
    alertpose_ = nullptr;
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&batterylevel_) -
    reinterpret_cast<char*>(&status_)) + sizeof(batterylevel_));
  // @@protoc_insertion_point(copy_constructor:platformcomms.PlatformState)
}

void PlatformState::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PlatformState_platformCommunications_2eproto.base);
  ::memset(&alertpose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batterylevel_) -
      reinterpret_cast<char*>(&alertpose_)) + sizeof(batterylevel_));
}

PlatformState::~PlatformState() {
  // @@protoc_insertion_point(destructor:platformcomms.PlatformState)
  SharedDtor();
}

void PlatformState::SharedDtor() {
  if (this != internal_default_instance()) delete alertpose_;
}

void PlatformState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlatformState& PlatformState::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PlatformState_platformCommunications_2eproto.base);
  return *internal_default_instance();
}


void PlatformState::Clear() {
// @@protoc_insertion_point(message_clear_start:platformcomms.PlatformState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alerts_.Clear();
  if (GetArenaNoVirtual() == nullptr && alertpose_ != nullptr) {
    delete alertpose_;
  }
  alertpose_ = nullptr;
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batterylevel_) -
      reinterpret_cast<char*>(&status_)) + sizeof(batterylevel_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlatformState::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PlatformState*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .platformcomms.Status Status = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_status(static_cast<::platformcomms::Status>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .platformcomms.Pose AlertPose = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::platformcomms::Pose::_InternalParse;
        object = msg->mutable_alertpose();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // double LiftHeight = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_liftheight(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // bool Stable = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_stable(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float BatteryLevel = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_batterylevel(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // repeated .platformcomms.Alert Alerts = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::platformcomms::Alert::_InternalParse;
          object = msg->add_alerts();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlatformState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:platformcomms.PlatformState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .platformcomms.Status Status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::platformcomms::Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .platformcomms.Pose AlertPose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alertpose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LiftHeight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &liftheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Stable = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BatteryLevel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &batterylevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .platformcomms.Alert Alerts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_alerts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:platformcomms.PlatformState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:platformcomms.PlatformState)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlatformState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:platformcomms.PlatformState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.Status Status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // .platformcomms.Pose AlertPose = 2;
  if (this->has_alertpose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::alertpose(this), output);
  }

  // double LiftHeight = 3;
  if (this->liftheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->liftheight(), output);
  }

  // bool Stable = 4;
  if (this->stable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->stable(), output);
  }

  // float BatteryLevel = 5;
  if (this->batterylevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->batterylevel(), output);
  }

  // repeated .platformcomms.Alert Alerts = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alerts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->alerts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:platformcomms.PlatformState)
}

::google::protobuf::uint8* PlatformState::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:platformcomms.PlatformState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .platformcomms.Status Status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // .platformcomms.Pose AlertPose = 2;
  if (this->has_alertpose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::alertpose(this), target);
  }

  // double LiftHeight = 3;
  if (this->liftheight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->liftheight(), target);
  }

  // bool Stable = 4;
  if (this->stable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->stable(), target);
  }

  // float BatteryLevel = 5;
  if (this->batterylevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->batterylevel(), target);
  }

  // repeated .platformcomms.Alert Alerts = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alerts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->alerts(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:platformcomms.PlatformState)
  return target;
}

size_t PlatformState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:platformcomms.PlatformState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .platformcomms.Alert Alerts = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->alerts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alerts(static_cast<int>(i)));
    }
  }

  // .platformcomms.Pose AlertPose = 2;
  if (this->has_alertpose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *alertpose_);
  }

  // .platformcomms.Status Status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // bool Stable = 4;
  if (this->stable() != 0) {
    total_size += 1 + 1;
  }

  // double LiftHeight = 3;
  if (this->liftheight() != 0) {
    total_size += 1 + 8;
  }

  // float BatteryLevel = 5;
  if (this->batterylevel() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlatformState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:platformcomms.PlatformState)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformState* source =
      ::google::protobuf::DynamicCastToGenerated<PlatformState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:platformcomms.PlatformState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:platformcomms.PlatformState)
    MergeFrom(*source);
  }
}

void PlatformState::MergeFrom(const PlatformState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:platformcomms.PlatformState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alerts_.MergeFrom(from.alerts_);
  if (from.has_alertpose()) {
    mutable_alertpose()->::platformcomms::Pose::MergeFrom(from.alertpose());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.stable() != 0) {
    set_stable(from.stable());
  }
  if (from.liftheight() != 0) {
    set_liftheight(from.liftheight());
  }
  if (from.batterylevel() != 0) {
    set_batterylevel(from.batterylevel());
  }
}

void PlatformState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:platformcomms.PlatformState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformState::CopyFrom(const PlatformState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:platformcomms.PlatformState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformState::IsInitialized() const {
  return true;
}

void PlatformState::Swap(PlatformState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformState::InternalSwap(PlatformState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&alerts_)->InternalSwap(CastToBase(&other->alerts_));
  swap(alertpose_, other->alertpose_);
  swap(status_, other->status_);
  swap(stable_, other->stable_);
  swap(liftheight_, other->liftheight_);
  swap(batterylevel_, other->batterylevel_);
}

::google::protobuf::Metadata PlatformState::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_platformCommunications_2eproto);
  return ::file_level_metadata_platformCommunications_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace platformcomms
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::platformcomms::Request* Arena::CreateMaybeMessage< ::platformcomms::Request >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::Request >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::HeightRequest* Arena::CreateMaybeMessage< ::platformcomms::HeightRequest >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::HeightRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::InitializationRequest* Arena::CreateMaybeMessage< ::platformcomms::InitializationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::InitializationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::MakeSafeRequest* Arena::CreateMaybeMessage< ::platformcomms::MakeSafeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::MakeSafeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::StabilityRequest* Arena::CreateMaybeMessage< ::platformcomms::StabilityRequest >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::StabilityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::StateRequest* Arena::CreateMaybeMessage< ::platformcomms::StateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::StateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::TargetRequest* Arena::CreateMaybeMessage< ::platformcomms::TargetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::TargetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::Pose* Arena::CreateMaybeMessage< ::platformcomms::Pose >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::Pose >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::Quaternion* Arena::CreateMaybeMessage< ::platformcomms::Quaternion >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::Quaternion >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::Vector3D* Arena::CreateMaybeMessage< ::platformcomms::Vector3D >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::Vector3D >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::Map* Arena::CreateMaybeMessage< ::platformcomms::Map >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::Map >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::Alert* Arena::CreateMaybeMessage< ::platformcomms::Alert >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::Alert >(arena);
}
template<> PROTOBUF_NOINLINE ::platformcomms::PlatformState* Arena::CreateMaybeMessage< ::platformcomms::PlatformState >(Arena* arena) {
  return Arena::CreateInternal< ::platformcomms::PlatformState >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
