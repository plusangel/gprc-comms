// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platformCommunications.proto

#ifndef PROTOBUF_INCLUDED_platformCommunications_2eproto
#define PROTOBUF_INCLUDED_platformCommunications_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_platformCommunications_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_platformCommunications_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_platformCommunications_2eproto();
namespace platformcomms {
class Alert;
class AlertDefaultTypeInternal;
extern AlertDefaultTypeInternal _Alert_default_instance_;
class HeightRequest;
class HeightRequestDefaultTypeInternal;
extern HeightRequestDefaultTypeInternal _HeightRequest_default_instance_;
class InitializationRequest;
class InitializationRequestDefaultTypeInternal;
extern InitializationRequestDefaultTypeInternal _InitializationRequest_default_instance_;
class MakeSafeRequest;
class MakeSafeRequestDefaultTypeInternal;
extern MakeSafeRequestDefaultTypeInternal _MakeSafeRequest_default_instance_;
class Map;
class MapDefaultTypeInternal;
extern MapDefaultTypeInternal _Map_default_instance_;
class PlatformState;
class PlatformStateDefaultTypeInternal;
extern PlatformStateDefaultTypeInternal _PlatformState_default_instance_;
class Pose;
class PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
class Quaternion;
class QuaternionDefaultTypeInternal;
extern QuaternionDefaultTypeInternal _Quaternion_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class StabilityRequest;
class StabilityRequestDefaultTypeInternal;
extern StabilityRequestDefaultTypeInternal _StabilityRequest_default_instance_;
class StateRequest;
class StateRequestDefaultTypeInternal;
extern StateRequestDefaultTypeInternal _StateRequest_default_instance_;
class TargetRequest;
class TargetRequestDefaultTypeInternal;
extern TargetRequestDefaultTypeInternal _TargetRequest_default_instance_;
class Vector3D;
class Vector3DDefaultTypeInternal;
extern Vector3DDefaultTypeInternal _Vector3D_default_instance_;
}  // namespace platformcomms
namespace google {
namespace protobuf {
template<> ::platformcomms::Alert* Arena::CreateMaybeMessage<::platformcomms::Alert>(Arena*);
template<> ::platformcomms::HeightRequest* Arena::CreateMaybeMessage<::platformcomms::HeightRequest>(Arena*);
template<> ::platformcomms::InitializationRequest* Arena::CreateMaybeMessage<::platformcomms::InitializationRequest>(Arena*);
template<> ::platformcomms::MakeSafeRequest* Arena::CreateMaybeMessage<::platformcomms::MakeSafeRequest>(Arena*);
template<> ::platformcomms::Map* Arena::CreateMaybeMessage<::platformcomms::Map>(Arena*);
template<> ::platformcomms::PlatformState* Arena::CreateMaybeMessage<::platformcomms::PlatformState>(Arena*);
template<> ::platformcomms::Pose* Arena::CreateMaybeMessage<::platformcomms::Pose>(Arena*);
template<> ::platformcomms::Quaternion* Arena::CreateMaybeMessage<::platformcomms::Quaternion>(Arena*);
template<> ::platformcomms::Request* Arena::CreateMaybeMessage<::platformcomms::Request>(Arena*);
template<> ::platformcomms::StabilityRequest* Arena::CreateMaybeMessage<::platformcomms::StabilityRequest>(Arena*);
template<> ::platformcomms::StateRequest* Arena::CreateMaybeMessage<::platformcomms::StateRequest>(Arena*);
template<> ::platformcomms::TargetRequest* Arena::CreateMaybeMessage<::platformcomms::TargetRequest>(Arena*);
template<> ::platformcomms::Vector3D* Arena::CreateMaybeMessage<::platformcomms::Vector3D>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace platformcomms {

enum AlertLevel {
  None = 0,
  Info = 1,
  Remark = 2,
  Warning = 3,
  Error = 4,
  AlertLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AlertLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AlertLevel_IsValid(int value);
const AlertLevel AlertLevel_MIN = None;
const AlertLevel AlertLevel_MAX = Error;
const int AlertLevel_ARRAYSIZE = AlertLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlertLevel_descriptor();
inline const ::std::string& AlertLevel_Name(AlertLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlertLevel_descriptor(), value);
}
inline bool AlertLevel_Parse(
    const ::std::string& name, AlertLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlertLevel>(
    AlertLevel_descriptor(), name, value);
}
enum Status {
  Unknown = 0,
  Faulted = 1,
  Uninitialized = 2,
  Ready = 3,
  Running = 4,
  Status_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Status_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Status_IsValid(int value);
const Status Status_MIN = Unknown;
const Status Status_MAX = Running;
const int Status_ARRAYSIZE = Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_descriptor();
inline const ::std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_descriptor(), value);
}
inline bool Status_Parse(
    const ::std::string& name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
// ===================================================================

class Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Request& default_instance();

  enum SubtypeCase {
    kInitializationRequest = 10,
    kTargetRequest = 11,
    kStabilityRequest = 12,
    kMakeSafeRequest = 13,
    kStateRequest = 14,
    kHeightRequest = 15,
    SUBTYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(nullptr);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .platformcomms.InitializationRequest InitializationRequest = 10;
  bool has_initializationrequest() const;
  void clear_initializationrequest();
  static const int kInitializationRequestFieldNumber = 10;
  const ::platformcomms::InitializationRequest& initializationrequest() const;
  ::platformcomms::InitializationRequest* release_initializationrequest();
  ::platformcomms::InitializationRequest* mutable_initializationrequest();
  void set_allocated_initializationrequest(::platformcomms::InitializationRequest* initializationrequest);

  // .platformcomms.TargetRequest TargetRequest = 11;
  bool has_targetrequest() const;
  void clear_targetrequest();
  static const int kTargetRequestFieldNumber = 11;
  const ::platformcomms::TargetRequest& targetrequest() const;
  ::platformcomms::TargetRequest* release_targetrequest();
  ::platformcomms::TargetRequest* mutable_targetrequest();
  void set_allocated_targetrequest(::platformcomms::TargetRequest* targetrequest);

  // .platformcomms.StabilityRequest StabilityRequest = 12;
  bool has_stabilityrequest() const;
  void clear_stabilityrequest();
  static const int kStabilityRequestFieldNumber = 12;
  const ::platformcomms::StabilityRequest& stabilityrequest() const;
  ::platformcomms::StabilityRequest* release_stabilityrequest();
  ::platformcomms::StabilityRequest* mutable_stabilityrequest();
  void set_allocated_stabilityrequest(::platformcomms::StabilityRequest* stabilityrequest);

  // .platformcomms.MakeSafeRequest MakeSafeRequest = 13;
  bool has_makesaferequest() const;
  void clear_makesaferequest();
  static const int kMakeSafeRequestFieldNumber = 13;
  const ::platformcomms::MakeSafeRequest& makesaferequest() const;
  ::platformcomms::MakeSafeRequest* release_makesaferequest();
  ::platformcomms::MakeSafeRequest* mutable_makesaferequest();
  void set_allocated_makesaferequest(::platformcomms::MakeSafeRequest* makesaferequest);

  // .platformcomms.StateRequest StateRequest = 14;
  bool has_staterequest() const;
  void clear_staterequest();
  static const int kStateRequestFieldNumber = 14;
  const ::platformcomms::StateRequest& staterequest() const;
  ::platformcomms::StateRequest* release_staterequest();
  ::platformcomms::StateRequest* mutable_staterequest();
  void set_allocated_staterequest(::platformcomms::StateRequest* staterequest);

  // .platformcomms.HeightRequest HeightRequest = 15;
  bool has_heightrequest() const;
  void clear_heightrequest();
  static const int kHeightRequestFieldNumber = 15;
  const ::platformcomms::HeightRequest& heightrequest() const;
  ::platformcomms::HeightRequest* release_heightrequest();
  ::platformcomms::HeightRequest* mutable_heightrequest();
  void set_allocated_heightrequest(::platformcomms::HeightRequest* heightrequest);

  void clear_subtype();
  SubtypeCase subtype_case() const;
  // @@protoc_insertion_point(class_scope:platformcomms.Request)
 private:
  class HasBitSetters;
  void set_has_initializationrequest();
  void set_has_targetrequest();
  void set_has_stabilityrequest();
  void set_has_makesaferequest();
  void set_has_staterequest();
  void set_has_heightrequest();

  inline bool has_subtype() const;
  inline void clear_has_subtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union SubtypeUnion {
    SubtypeUnion() {}
    ::platformcomms::InitializationRequest* initializationrequest_;
    ::platformcomms::TargetRequest* targetrequest_;
    ::platformcomms::StabilityRequest* stabilityrequest_;
    ::platformcomms::MakeSafeRequest* makesaferequest_;
    ::platformcomms::StateRequest* staterequest_;
    ::platformcomms::HeightRequest* heightrequest_;
  } subtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class HeightRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.HeightRequest) */ {
 public:
  HeightRequest();
  virtual ~HeightRequest();

  HeightRequest(const HeightRequest& from);

  inline HeightRequest& operator=(const HeightRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeightRequest(HeightRequest&& from) noexcept
    : HeightRequest() {
    *this = ::std::move(from);
  }

  inline HeightRequest& operator=(HeightRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HeightRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeightRequest* internal_default_instance() {
    return reinterpret_cast<const HeightRequest*>(
               &_HeightRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HeightRequest* other);
  friend void swap(HeightRequest& a, HeightRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeightRequest* New() const final {
    return CreateMaybeMessage<HeightRequest>(nullptr);
  }

  HeightRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeightRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeightRequest& from);
  void MergeFrom(const HeightRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeightRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double Height = 1;
  void clear_height();
  static const int kHeightFieldNumber = 1;
  double height() const;
  void set_height(double value);

  // @@protoc_insertion_point(class_scope:platformcomms.HeightRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double height_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class InitializationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.InitializationRequest) */ {
 public:
  InitializationRequest();
  virtual ~InitializationRequest();

  InitializationRequest(const InitializationRequest& from);

  inline InitializationRequest& operator=(const InitializationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitializationRequest(InitializationRequest&& from) noexcept
    : InitializationRequest() {
    *this = ::std::move(from);
  }

  inline InitializationRequest& operator=(InitializationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InitializationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitializationRequest* internal_default_instance() {
    return reinterpret_cast<const InitializationRequest*>(
               &_InitializationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(InitializationRequest* other);
  friend void swap(InitializationRequest& a, InitializationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitializationRequest* New() const final {
    return CreateMaybeMessage<InitializationRequest>(nullptr);
  }

  InitializationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InitializationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InitializationRequest& from);
  void MergeFrom(const InitializationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitializationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .platformcomms.Pose ApproximatePose = 1;
  bool has_approximatepose() const;
  void clear_approximatepose();
  static const int kApproximatePoseFieldNumber = 1;
  const ::platformcomms::Pose& approximatepose() const;
  ::platformcomms::Pose* release_approximatepose();
  ::platformcomms::Pose* mutable_approximatepose();
  void set_allocated_approximatepose(::platformcomms::Pose* approximatepose);

  // .platformcomms.Map ApproximateMap = 2;
  bool has_approximatemap() const;
  void clear_approximatemap();
  static const int kApproximateMapFieldNumber = 2;
  const ::platformcomms::Map& approximatemap() const;
  ::platformcomms::Map* release_approximatemap();
  ::platformcomms::Map* mutable_approximatemap();
  void set_allocated_approximatemap(::platformcomms::Map* approximatemap);

  // @@protoc_insertion_point(class_scope:platformcomms.InitializationRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::platformcomms::Pose* approximatepose_;
  ::platformcomms::Map* approximatemap_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class MakeSafeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.MakeSafeRequest) */ {
 public:
  MakeSafeRequest();
  virtual ~MakeSafeRequest();

  MakeSafeRequest(const MakeSafeRequest& from);

  inline MakeSafeRequest& operator=(const MakeSafeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MakeSafeRequest(MakeSafeRequest&& from) noexcept
    : MakeSafeRequest() {
    *this = ::std::move(from);
  }

  inline MakeSafeRequest& operator=(MakeSafeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MakeSafeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MakeSafeRequest* internal_default_instance() {
    return reinterpret_cast<const MakeSafeRequest*>(
               &_MakeSafeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MakeSafeRequest* other);
  friend void swap(MakeSafeRequest& a, MakeSafeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MakeSafeRequest* New() const final {
    return CreateMaybeMessage<MakeSafeRequest>(nullptr);
  }

  MakeSafeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MakeSafeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MakeSafeRequest& from);
  void MergeFrom(const MakeSafeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MakeSafeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool MakeSafe = 1;
  void clear_makesafe();
  static const int kMakeSafeFieldNumber = 1;
  bool makesafe() const;
  void set_makesafe(bool value);

  // @@protoc_insertion_point(class_scope:platformcomms.MakeSafeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool makesafe_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class StabilityRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.StabilityRequest) */ {
 public:
  StabilityRequest();
  virtual ~StabilityRequest();

  StabilityRequest(const StabilityRequest& from);

  inline StabilityRequest& operator=(const StabilityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StabilityRequest(StabilityRequest&& from) noexcept
    : StabilityRequest() {
    *this = ::std::move(from);
  }

  inline StabilityRequest& operator=(StabilityRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StabilityRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StabilityRequest* internal_default_instance() {
    return reinterpret_cast<const StabilityRequest*>(
               &_StabilityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(StabilityRequest* other);
  friend void swap(StabilityRequest& a, StabilityRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StabilityRequest* New() const final {
    return CreateMaybeMessage<StabilityRequest>(nullptr);
  }

  StabilityRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StabilityRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StabilityRequest& from);
  void MergeFrom(const StabilityRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StabilityRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool Stabilize = 1;
  void clear_stabilize();
  static const int kStabilizeFieldNumber = 1;
  bool stabilize() const;
  void set_stabilize(bool value);

  // @@protoc_insertion_point(class_scope:platformcomms.StabilityRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool stabilize_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class StateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.StateRequest) */ {
 public:
  StateRequest();
  virtual ~StateRequest();

  StateRequest(const StateRequest& from);

  inline StateRequest& operator=(const StateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StateRequest(StateRequest&& from) noexcept
    : StateRequest() {
    *this = ::std::move(from);
  }

  inline StateRequest& operator=(StateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateRequest* internal_default_instance() {
    return reinterpret_cast<const StateRequest*>(
               &_StateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(StateRequest* other);
  friend void swap(StateRequest& a, StateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateRequest* New() const final {
    return CreateMaybeMessage<StateRequest>(nullptr);
  }

  StateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StateRequest& from);
  void MergeFrom(const StateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool GetState = 1;
  void clear_getstate();
  static const int kGetStateFieldNumber = 1;
  bool getstate() const;
  void set_getstate(bool value);

  // @@protoc_insertion_point(class_scope:platformcomms.StateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool getstate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class TargetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.TargetRequest) */ {
 public:
  TargetRequest();
  virtual ~TargetRequest();

  TargetRequest(const TargetRequest& from);

  inline TargetRequest& operator=(const TargetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetRequest(TargetRequest&& from) noexcept
    : TargetRequest() {
    *this = ::std::move(from);
  }

  inline TargetRequest& operator=(TargetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TargetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetRequest* internal_default_instance() {
    return reinterpret_cast<const TargetRequest*>(
               &_TargetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(TargetRequest* other);
  friend void swap(TargetRequest& a, TargetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetRequest* New() const final {
    return CreateMaybeMessage<TargetRequest>(nullptr);
  }

  TargetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TargetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TargetRequest& from);
  void MergeFrom(const TargetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .platformcomms.Pose Target = 1;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 1;
  const ::platformcomms::Pose& target() const;
  ::platformcomms::Pose* release_target();
  ::platformcomms::Pose* mutable_target();
  void set_allocated_target(::platformcomms::Pose* target);

  // @@protoc_insertion_point(class_scope:platformcomms.TargetRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::platformcomms::Pose* target_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class Pose final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.Pose) */ {
 public:
  Pose();
  virtual ~Pose();

  Pose(const Pose& from);

  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pose(Pose&& from) noexcept
    : Pose() {
    *this = ::std::move(from);
  }

  inline Pose& operator=(Pose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Pose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pose* internal_default_instance() {
    return reinterpret_cast<const Pose*>(
               &_Pose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Pose* other);
  friend void swap(Pose& a, Pose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pose* New() const final {
    return CreateMaybeMessage<Pose>(nullptr);
  }

  Pose* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pose>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Pose& from);
  void MergeFrom(const Pose& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .platformcomms.Vector3D Position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  const ::platformcomms::Vector3D& position() const;
  ::platformcomms::Vector3D* release_position();
  ::platformcomms::Vector3D* mutable_position();
  void set_allocated_position(::platformcomms::Vector3D* position);

  // .platformcomms.Quaternion Orientation = 2;
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 2;
  const ::platformcomms::Quaternion& orientation() const;
  ::platformcomms::Quaternion* release_orientation();
  ::platformcomms::Quaternion* mutable_orientation();
  void set_allocated_orientation(::platformcomms::Quaternion* orientation);

  // @@protoc_insertion_point(class_scope:platformcomms.Pose)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::platformcomms::Vector3D* position_;
  ::platformcomms::Quaternion* orientation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class Quaternion final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.Quaternion) */ {
 public:
  Quaternion();
  virtual ~Quaternion();

  Quaternion(const Quaternion& from);

  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quaternion(Quaternion&& from) noexcept
    : Quaternion() {
    *this = ::std::move(from);
  }

  inline Quaternion& operator=(Quaternion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Quaternion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quaternion* internal_default_instance() {
    return reinterpret_cast<const Quaternion*>(
               &_Quaternion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Quaternion* other);
  friend void swap(Quaternion& a, Quaternion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quaternion* New() const final {
    return CreateMaybeMessage<Quaternion>(nullptr);
  }

  Quaternion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Quaternion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Quaternion& from);
  void MergeFrom(const Quaternion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Quaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double Z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // double R = 4;
  void clear_r();
  static const int kRFieldNumber = 4;
  double r() const;
  void set_r(double value);

  // @@protoc_insertion_point(class_scope:platformcomms.Quaternion)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  double r_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class Vector3D final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.Vector3D) */ {
 public:
  Vector3D();
  virtual ~Vector3D();

  Vector3D(const Vector3D& from);

  inline Vector3D& operator=(const Vector3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector3D(Vector3D&& from) noexcept
    : Vector3D() {
    *this = ::std::move(from);
  }

  inline Vector3D& operator=(Vector3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Vector3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vector3D* internal_default_instance() {
    return reinterpret_cast<const Vector3D*>(
               &_Vector3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Vector3D* other);
  friend void swap(Vector3D& a, Vector3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector3D* New() const final {
    return CreateMaybeMessage<Vector3D>(nullptr);
  }

  Vector3D* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Vector3D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Vector3D& from);
  void MergeFrom(const Vector3D& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double Z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:platformcomms.Vector3D)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class Map final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.Map) */ {
 public:
  Map();
  virtual ~Map();

  Map(const Map& from);

  inline Map& operator=(const Map& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Map(Map&& from) noexcept
    : Map() {
    *this = ::std::move(from);
  }

  inline Map& operator=(Map&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Map& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Map* internal_default_instance() {
    return reinterpret_cast<const Map*>(
               &_Map_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Map* other);
  friend void swap(Map& a, Map& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Map* New() const final {
    return CreateMaybeMessage<Map>(nullptr);
  }

  Map* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Map>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Map& from);
  void MergeFrom(const Map& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Map* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .platformcomms.Vector3D Origin = 5;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 5;
  const ::platformcomms::Vector3D& origin() const;
  ::platformcomms::Vector3D* release_origin();
  ::platformcomms::Vector3D* mutable_origin();
  void set_allocated_origin(::platformcomms::Vector3D* origin);

  // int32 ImageWidth = 2;
  void clear_imagewidth();
  static const int kImageWidthFieldNumber = 2;
  ::google::protobuf::int32 imagewidth() const;
  void set_imagewidth(::google::protobuf::int32 value);

  // int32 ImageHeight = 3;
  void clear_imageheight();
  static const int kImageHeightFieldNumber = 3;
  ::google::protobuf::int32 imageheight() const;
  void set_imageheight(::google::protobuf::int32 value);

  // double Resolution = 4;
  void clear_resolution();
  static const int kResolutionFieldNumber = 4;
  double resolution() const;
  void set_resolution(double value);

  // double LocalisationOccupiedThreshold = 6;
  void clear_localisationoccupiedthreshold();
  static const int kLocalisationOccupiedThresholdFieldNumber = 6;
  double localisationoccupiedthreshold() const;
  void set_localisationoccupiedthreshold(double value);

  // double PathPlanningOccupiedThreshold = 7;
  void clear_pathplanningoccupiedthreshold();
  static const int kPathPlanningOccupiedThresholdFieldNumber = 7;
  double pathplanningoccupiedthreshold() const;
  void set_pathplanningoccupiedthreshold(double value);

  // @@protoc_insertion_point(class_scope:platformcomms.Map)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::platformcomms::Vector3D* origin_;
  ::google::protobuf::int32 imagewidth_;
  ::google::protobuf::int32 imageheight_;
  double resolution_;
  double localisationoccupiedthreshold_;
  double pathplanningoccupiedthreshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class Alert final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.Alert) */ {
 public:
  Alert();
  virtual ~Alert();

  Alert(const Alert& from);

  inline Alert& operator=(const Alert& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Alert(Alert&& from) noexcept
    : Alert() {
    *this = ::std::move(from);
  }

  inline Alert& operator=(Alert&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Alert& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Alert* internal_default_instance() {
    return reinterpret_cast<const Alert*>(
               &_Alert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Alert* other);
  friend void swap(Alert& a, Alert& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Alert* New() const final {
    return CreateMaybeMessage<Alert>(nullptr);
  }

  Alert* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Alert>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Alert& from);
  void MergeFrom(const Alert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Alert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string Topic = 3;
  void clear_topic();
  static const int kTopicFieldNumber = 3;
  const ::std::string& topic() const;
  void set_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_topic(::std::string&& value);
  #endif
  void set_topic(const char* value);
  void set_topic(const char* value, size_t size);
  ::std::string* mutable_topic();
  ::std::string* release_topic();
  void set_allocated_topic(::std::string* topic);

  // int64 TimeStamp = 2;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // .platformcomms.AlertLevel Severity = 4;
  void clear_severity();
  static const int kSeverityFieldNumber = 4;
  ::platformcomms::AlertLevel severity() const;
  void set_severity(::platformcomms::AlertLevel value);

  // @@protoc_insertion_point(class_scope:platformcomms.Alert)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr topic_;
  ::google::protobuf::int64 timestamp_;
  int severity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// -------------------------------------------------------------------

class PlatformState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:platformcomms.PlatformState) */ {
 public:
  PlatformState();
  virtual ~PlatformState();

  PlatformState(const PlatformState& from);

  inline PlatformState& operator=(const PlatformState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformState(PlatformState&& from) noexcept
    : PlatformState() {
    *this = ::std::move(from);
  }

  inline PlatformState& operator=(PlatformState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlatformState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlatformState* internal_default_instance() {
    return reinterpret_cast<const PlatformState*>(
               &_PlatformState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(PlatformState* other);
  friend void swap(PlatformState& a, PlatformState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformState* New() const final {
    return CreateMaybeMessage<PlatformState>(nullptr);
  }

  PlatformState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlatformState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlatformState& from);
  void MergeFrom(const PlatformState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlatformState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .platformcomms.Alert Alerts = 6;
  int alerts_size() const;
  void clear_alerts();
  static const int kAlertsFieldNumber = 6;
  ::platformcomms::Alert* mutable_alerts(int index);
  ::google::protobuf::RepeatedPtrField< ::platformcomms::Alert >*
      mutable_alerts();
  const ::platformcomms::Alert& alerts(int index) const;
  ::platformcomms::Alert* add_alerts();
  const ::google::protobuf::RepeatedPtrField< ::platformcomms::Alert >&
      alerts() const;

  // .platformcomms.Pose AlertPose = 2;
  bool has_alertpose() const;
  void clear_alertpose();
  static const int kAlertPoseFieldNumber = 2;
  const ::platformcomms::Pose& alertpose() const;
  ::platformcomms::Pose* release_alertpose();
  ::platformcomms::Pose* mutable_alertpose();
  void set_allocated_alertpose(::platformcomms::Pose* alertpose);

  // .platformcomms.Status Status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::platformcomms::Status status() const;
  void set_status(::platformcomms::Status value);

  // bool Stable = 4;
  void clear_stable();
  static const int kStableFieldNumber = 4;
  bool stable() const;
  void set_stable(bool value);

  // double LiftHeight = 3;
  void clear_liftheight();
  static const int kLiftHeightFieldNumber = 3;
  double liftheight() const;
  void set_liftheight(double value);

  // float BatteryLevel = 5;
  void clear_batterylevel();
  static const int kBatteryLevelFieldNumber = 5;
  float batterylevel() const;
  void set_batterylevel(float value);

  // @@protoc_insertion_point(class_scope:platformcomms.PlatformState)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::platformcomms::Alert > alerts_;
  ::platformcomms::Pose* alertpose_;
  int status_;
  bool stable_;
  double liftheight_;
  float batterylevel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_platformCommunications_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request

// .platformcomms.InitializationRequest InitializationRequest = 10;
inline bool Request::has_initializationrequest() const {
  return subtype_case() == kInitializationRequest;
}
inline void Request::set_has_initializationrequest() {
  _oneof_case_[0] = kInitializationRequest;
}
inline void Request::clear_initializationrequest() {
  if (has_initializationrequest()) {
    delete subtype_.initializationrequest_;
    clear_has_subtype();
  }
}
inline ::platformcomms::InitializationRequest* Request::release_initializationrequest() {
  // @@protoc_insertion_point(field_release:platformcomms.Request.InitializationRequest)
  if (has_initializationrequest()) {
    clear_has_subtype();
      ::platformcomms::InitializationRequest* temp = subtype_.initializationrequest_;
    subtype_.initializationrequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::platformcomms::InitializationRequest& Request::initializationrequest() const {
  // @@protoc_insertion_point(field_get:platformcomms.Request.InitializationRequest)
  return has_initializationrequest()
      ? *subtype_.initializationrequest_
      : *reinterpret_cast< ::platformcomms::InitializationRequest*>(&::platformcomms::_InitializationRequest_default_instance_);
}
inline ::platformcomms::InitializationRequest* Request::mutable_initializationrequest() {
  if (!has_initializationrequest()) {
    clear_subtype();
    set_has_initializationrequest();
    subtype_.initializationrequest_ = CreateMaybeMessage< ::platformcomms::InitializationRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.Request.InitializationRequest)
  return subtype_.initializationrequest_;
}

// .platformcomms.TargetRequest TargetRequest = 11;
inline bool Request::has_targetrequest() const {
  return subtype_case() == kTargetRequest;
}
inline void Request::set_has_targetrequest() {
  _oneof_case_[0] = kTargetRequest;
}
inline void Request::clear_targetrequest() {
  if (has_targetrequest()) {
    delete subtype_.targetrequest_;
    clear_has_subtype();
  }
}
inline ::platformcomms::TargetRequest* Request::release_targetrequest() {
  // @@protoc_insertion_point(field_release:platformcomms.Request.TargetRequest)
  if (has_targetrequest()) {
    clear_has_subtype();
      ::platformcomms::TargetRequest* temp = subtype_.targetrequest_;
    subtype_.targetrequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::platformcomms::TargetRequest& Request::targetrequest() const {
  // @@protoc_insertion_point(field_get:platformcomms.Request.TargetRequest)
  return has_targetrequest()
      ? *subtype_.targetrequest_
      : *reinterpret_cast< ::platformcomms::TargetRequest*>(&::platformcomms::_TargetRequest_default_instance_);
}
inline ::platformcomms::TargetRequest* Request::mutable_targetrequest() {
  if (!has_targetrequest()) {
    clear_subtype();
    set_has_targetrequest();
    subtype_.targetrequest_ = CreateMaybeMessage< ::platformcomms::TargetRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.Request.TargetRequest)
  return subtype_.targetrequest_;
}

// .platformcomms.StabilityRequest StabilityRequest = 12;
inline bool Request::has_stabilityrequest() const {
  return subtype_case() == kStabilityRequest;
}
inline void Request::set_has_stabilityrequest() {
  _oneof_case_[0] = kStabilityRequest;
}
inline void Request::clear_stabilityrequest() {
  if (has_stabilityrequest()) {
    delete subtype_.stabilityrequest_;
    clear_has_subtype();
  }
}
inline ::platformcomms::StabilityRequest* Request::release_stabilityrequest() {
  // @@protoc_insertion_point(field_release:platformcomms.Request.StabilityRequest)
  if (has_stabilityrequest()) {
    clear_has_subtype();
      ::platformcomms::StabilityRequest* temp = subtype_.stabilityrequest_;
    subtype_.stabilityrequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::platformcomms::StabilityRequest& Request::stabilityrequest() const {
  // @@protoc_insertion_point(field_get:platformcomms.Request.StabilityRequest)
  return has_stabilityrequest()
      ? *subtype_.stabilityrequest_
      : *reinterpret_cast< ::platformcomms::StabilityRequest*>(&::platformcomms::_StabilityRequest_default_instance_);
}
inline ::platformcomms::StabilityRequest* Request::mutable_stabilityrequest() {
  if (!has_stabilityrequest()) {
    clear_subtype();
    set_has_stabilityrequest();
    subtype_.stabilityrequest_ = CreateMaybeMessage< ::platformcomms::StabilityRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.Request.StabilityRequest)
  return subtype_.stabilityrequest_;
}

// .platformcomms.MakeSafeRequest MakeSafeRequest = 13;
inline bool Request::has_makesaferequest() const {
  return subtype_case() == kMakeSafeRequest;
}
inline void Request::set_has_makesaferequest() {
  _oneof_case_[0] = kMakeSafeRequest;
}
inline void Request::clear_makesaferequest() {
  if (has_makesaferequest()) {
    delete subtype_.makesaferequest_;
    clear_has_subtype();
  }
}
inline ::platformcomms::MakeSafeRequest* Request::release_makesaferequest() {
  // @@protoc_insertion_point(field_release:platformcomms.Request.MakeSafeRequest)
  if (has_makesaferequest()) {
    clear_has_subtype();
      ::platformcomms::MakeSafeRequest* temp = subtype_.makesaferequest_;
    subtype_.makesaferequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::platformcomms::MakeSafeRequest& Request::makesaferequest() const {
  // @@protoc_insertion_point(field_get:platformcomms.Request.MakeSafeRequest)
  return has_makesaferequest()
      ? *subtype_.makesaferequest_
      : *reinterpret_cast< ::platformcomms::MakeSafeRequest*>(&::platformcomms::_MakeSafeRequest_default_instance_);
}
inline ::platformcomms::MakeSafeRequest* Request::mutable_makesaferequest() {
  if (!has_makesaferequest()) {
    clear_subtype();
    set_has_makesaferequest();
    subtype_.makesaferequest_ = CreateMaybeMessage< ::platformcomms::MakeSafeRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.Request.MakeSafeRequest)
  return subtype_.makesaferequest_;
}

// .platformcomms.StateRequest StateRequest = 14;
inline bool Request::has_staterequest() const {
  return subtype_case() == kStateRequest;
}
inline void Request::set_has_staterequest() {
  _oneof_case_[0] = kStateRequest;
}
inline void Request::clear_staterequest() {
  if (has_staterequest()) {
    delete subtype_.staterequest_;
    clear_has_subtype();
  }
}
inline ::platformcomms::StateRequest* Request::release_staterequest() {
  // @@protoc_insertion_point(field_release:platformcomms.Request.StateRequest)
  if (has_staterequest()) {
    clear_has_subtype();
      ::platformcomms::StateRequest* temp = subtype_.staterequest_;
    subtype_.staterequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::platformcomms::StateRequest& Request::staterequest() const {
  // @@protoc_insertion_point(field_get:platformcomms.Request.StateRequest)
  return has_staterequest()
      ? *subtype_.staterequest_
      : *reinterpret_cast< ::platformcomms::StateRequest*>(&::platformcomms::_StateRequest_default_instance_);
}
inline ::platformcomms::StateRequest* Request::mutable_staterequest() {
  if (!has_staterequest()) {
    clear_subtype();
    set_has_staterequest();
    subtype_.staterequest_ = CreateMaybeMessage< ::platformcomms::StateRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.Request.StateRequest)
  return subtype_.staterequest_;
}

// .platformcomms.HeightRequest HeightRequest = 15;
inline bool Request::has_heightrequest() const {
  return subtype_case() == kHeightRequest;
}
inline void Request::set_has_heightrequest() {
  _oneof_case_[0] = kHeightRequest;
}
inline void Request::clear_heightrequest() {
  if (has_heightrequest()) {
    delete subtype_.heightrequest_;
    clear_has_subtype();
  }
}
inline ::platformcomms::HeightRequest* Request::release_heightrequest() {
  // @@protoc_insertion_point(field_release:platformcomms.Request.HeightRequest)
  if (has_heightrequest()) {
    clear_has_subtype();
      ::platformcomms::HeightRequest* temp = subtype_.heightrequest_;
    subtype_.heightrequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::platformcomms::HeightRequest& Request::heightrequest() const {
  // @@protoc_insertion_point(field_get:platformcomms.Request.HeightRequest)
  return has_heightrequest()
      ? *subtype_.heightrequest_
      : *reinterpret_cast< ::platformcomms::HeightRequest*>(&::platformcomms::_HeightRequest_default_instance_);
}
inline ::platformcomms::HeightRequest* Request::mutable_heightrequest() {
  if (!has_heightrequest()) {
    clear_subtype();
    set_has_heightrequest();
    subtype_.heightrequest_ = CreateMaybeMessage< ::platformcomms::HeightRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.Request.HeightRequest)
  return subtype_.heightrequest_;
}

inline bool Request::has_subtype() const {
  return subtype_case() != SUBTYPE_NOT_SET;
}
inline void Request::clear_has_subtype() {
  _oneof_case_[0] = SUBTYPE_NOT_SET;
}
inline Request::SubtypeCase Request::subtype_case() const {
  return Request::SubtypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// HeightRequest

// double Height = 1;
inline void HeightRequest::clear_height() {
  height_ = 0;
}
inline double HeightRequest::height() const {
  // @@protoc_insertion_point(field_get:platformcomms.HeightRequest.Height)
  return height_;
}
inline void HeightRequest::set_height(double value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.HeightRequest.Height)
}

// -------------------------------------------------------------------

// InitializationRequest

// .platformcomms.Pose ApproximatePose = 1;
inline bool InitializationRequest::has_approximatepose() const {
  return this != internal_default_instance() && approximatepose_ != nullptr;
}
inline void InitializationRequest::clear_approximatepose() {
  if (GetArenaNoVirtual() == nullptr && approximatepose_ != nullptr) {
    delete approximatepose_;
  }
  approximatepose_ = nullptr;
}
inline const ::platformcomms::Pose& InitializationRequest::approximatepose() const {
  const ::platformcomms::Pose* p = approximatepose_;
  // @@protoc_insertion_point(field_get:platformcomms.InitializationRequest.ApproximatePose)
  return p != nullptr ? *p : *reinterpret_cast<const ::platformcomms::Pose*>(
      &::platformcomms::_Pose_default_instance_);
}
inline ::platformcomms::Pose* InitializationRequest::release_approximatepose() {
  // @@protoc_insertion_point(field_release:platformcomms.InitializationRequest.ApproximatePose)
  
  ::platformcomms::Pose* temp = approximatepose_;
  approximatepose_ = nullptr;
  return temp;
}
inline ::platformcomms::Pose* InitializationRequest::mutable_approximatepose() {
  
  if (approximatepose_ == nullptr) {
    auto* p = CreateMaybeMessage<::platformcomms::Pose>(GetArenaNoVirtual());
    approximatepose_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.InitializationRequest.ApproximatePose)
  return approximatepose_;
}
inline void InitializationRequest::set_allocated_approximatepose(::platformcomms::Pose* approximatepose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete approximatepose_;
  }
  if (approximatepose) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      approximatepose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, approximatepose, submessage_arena);
    }
    
  } else {
    
  }
  approximatepose_ = approximatepose;
  // @@protoc_insertion_point(field_set_allocated:platformcomms.InitializationRequest.ApproximatePose)
}

// .platformcomms.Map ApproximateMap = 2;
inline bool InitializationRequest::has_approximatemap() const {
  return this != internal_default_instance() && approximatemap_ != nullptr;
}
inline void InitializationRequest::clear_approximatemap() {
  if (GetArenaNoVirtual() == nullptr && approximatemap_ != nullptr) {
    delete approximatemap_;
  }
  approximatemap_ = nullptr;
}
inline const ::platformcomms::Map& InitializationRequest::approximatemap() const {
  const ::platformcomms::Map* p = approximatemap_;
  // @@protoc_insertion_point(field_get:platformcomms.InitializationRequest.ApproximateMap)
  return p != nullptr ? *p : *reinterpret_cast<const ::platformcomms::Map*>(
      &::platformcomms::_Map_default_instance_);
}
inline ::platformcomms::Map* InitializationRequest::release_approximatemap() {
  // @@protoc_insertion_point(field_release:platformcomms.InitializationRequest.ApproximateMap)
  
  ::platformcomms::Map* temp = approximatemap_;
  approximatemap_ = nullptr;
  return temp;
}
inline ::platformcomms::Map* InitializationRequest::mutable_approximatemap() {
  
  if (approximatemap_ == nullptr) {
    auto* p = CreateMaybeMessage<::platformcomms::Map>(GetArenaNoVirtual());
    approximatemap_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.InitializationRequest.ApproximateMap)
  return approximatemap_;
}
inline void InitializationRequest::set_allocated_approximatemap(::platformcomms::Map* approximatemap) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete approximatemap_;
  }
  if (approximatemap) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      approximatemap = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, approximatemap, submessage_arena);
    }
    
  } else {
    
  }
  approximatemap_ = approximatemap;
  // @@protoc_insertion_point(field_set_allocated:platformcomms.InitializationRequest.ApproximateMap)
}

// -------------------------------------------------------------------

// MakeSafeRequest

// bool MakeSafe = 1;
inline void MakeSafeRequest::clear_makesafe() {
  makesafe_ = false;
}
inline bool MakeSafeRequest::makesafe() const {
  // @@protoc_insertion_point(field_get:platformcomms.MakeSafeRequest.MakeSafe)
  return makesafe_;
}
inline void MakeSafeRequest::set_makesafe(bool value) {
  
  makesafe_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.MakeSafeRequest.MakeSafe)
}

// -------------------------------------------------------------------

// StabilityRequest

// bool Stabilize = 1;
inline void StabilityRequest::clear_stabilize() {
  stabilize_ = false;
}
inline bool StabilityRequest::stabilize() const {
  // @@protoc_insertion_point(field_get:platformcomms.StabilityRequest.Stabilize)
  return stabilize_;
}
inline void StabilityRequest::set_stabilize(bool value) {
  
  stabilize_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.StabilityRequest.Stabilize)
}

// -------------------------------------------------------------------

// StateRequest

// bool GetState = 1;
inline void StateRequest::clear_getstate() {
  getstate_ = false;
}
inline bool StateRequest::getstate() const {
  // @@protoc_insertion_point(field_get:platformcomms.StateRequest.GetState)
  return getstate_;
}
inline void StateRequest::set_getstate(bool value) {
  
  getstate_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.StateRequest.GetState)
}

// -------------------------------------------------------------------

// TargetRequest

// .platformcomms.Pose Target = 1;
inline bool TargetRequest::has_target() const {
  return this != internal_default_instance() && target_ != nullptr;
}
inline void TargetRequest::clear_target() {
  if (GetArenaNoVirtual() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
}
inline const ::platformcomms::Pose& TargetRequest::target() const {
  const ::platformcomms::Pose* p = target_;
  // @@protoc_insertion_point(field_get:platformcomms.TargetRequest.Target)
  return p != nullptr ? *p : *reinterpret_cast<const ::platformcomms::Pose*>(
      &::platformcomms::_Pose_default_instance_);
}
inline ::platformcomms::Pose* TargetRequest::release_target() {
  // @@protoc_insertion_point(field_release:platformcomms.TargetRequest.Target)
  
  ::platformcomms::Pose* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::platformcomms::Pose* TargetRequest::mutable_target() {
  
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::platformcomms::Pose>(GetArenaNoVirtual());
    target_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.TargetRequest.Target)
  return target_;
}
inline void TargetRequest::set_allocated_target(::platformcomms::Pose* target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete target_;
  }
  if (target) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    
  } else {
    
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:platformcomms.TargetRequest.Target)
}

// -------------------------------------------------------------------

// Pose

// .platformcomms.Vector3D Position = 1;
inline bool Pose::has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline void Pose::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::platformcomms::Vector3D& Pose::position() const {
  const ::platformcomms::Vector3D* p = position_;
  // @@protoc_insertion_point(field_get:platformcomms.Pose.Position)
  return p != nullptr ? *p : *reinterpret_cast<const ::platformcomms::Vector3D*>(
      &::platformcomms::_Vector3D_default_instance_);
}
inline ::platformcomms::Vector3D* Pose::release_position() {
  // @@protoc_insertion_point(field_release:platformcomms.Pose.Position)
  
  ::platformcomms::Vector3D* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::platformcomms::Vector3D* Pose::mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::platformcomms::Vector3D>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.Pose.Position)
  return position_;
}
inline void Pose::set_allocated_position(::platformcomms::Vector3D* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Pose.Position)
}

// .platformcomms.Quaternion Orientation = 2;
inline bool Pose::has_orientation() const {
  return this != internal_default_instance() && orientation_ != nullptr;
}
inline void Pose::clear_orientation() {
  if (GetArenaNoVirtual() == nullptr && orientation_ != nullptr) {
    delete orientation_;
  }
  orientation_ = nullptr;
}
inline const ::platformcomms::Quaternion& Pose::orientation() const {
  const ::platformcomms::Quaternion* p = orientation_;
  // @@protoc_insertion_point(field_get:platformcomms.Pose.Orientation)
  return p != nullptr ? *p : *reinterpret_cast<const ::platformcomms::Quaternion*>(
      &::platformcomms::_Quaternion_default_instance_);
}
inline ::platformcomms::Quaternion* Pose::release_orientation() {
  // @@protoc_insertion_point(field_release:platformcomms.Pose.Orientation)
  
  ::platformcomms::Quaternion* temp = orientation_;
  orientation_ = nullptr;
  return temp;
}
inline ::platformcomms::Quaternion* Pose::mutable_orientation() {
  
  if (orientation_ == nullptr) {
    auto* p = CreateMaybeMessage<::platformcomms::Quaternion>(GetArenaNoVirtual());
    orientation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.Pose.Orientation)
  return orientation_;
}
inline void Pose::set_allocated_orientation(::platformcomms::Quaternion* orientation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete orientation_;
  }
  if (orientation) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      orientation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, orientation, submessage_arena);
    }
    
  } else {
    
  }
  orientation_ = orientation;
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Pose.Orientation)
}

// -------------------------------------------------------------------

// Quaternion

// double X = 1;
inline void Quaternion::clear_x() {
  x_ = 0;
}
inline double Quaternion::x() const {
  // @@protoc_insertion_point(field_get:platformcomms.Quaternion.X)
  return x_;
}
inline void Quaternion::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Quaternion.X)
}

// double Y = 2;
inline void Quaternion::clear_y() {
  y_ = 0;
}
inline double Quaternion::y() const {
  // @@protoc_insertion_point(field_get:platformcomms.Quaternion.Y)
  return y_;
}
inline void Quaternion::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Quaternion.Y)
}

// double Z = 3;
inline void Quaternion::clear_z() {
  z_ = 0;
}
inline double Quaternion::z() const {
  // @@protoc_insertion_point(field_get:platformcomms.Quaternion.Z)
  return z_;
}
inline void Quaternion::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Quaternion.Z)
}

// double R = 4;
inline void Quaternion::clear_r() {
  r_ = 0;
}
inline double Quaternion::r() const {
  // @@protoc_insertion_point(field_get:platformcomms.Quaternion.R)
  return r_;
}
inline void Quaternion::set_r(double value) {
  
  r_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Quaternion.R)
}

// -------------------------------------------------------------------

// Vector3D

// double X = 1;
inline void Vector3D::clear_x() {
  x_ = 0;
}
inline double Vector3D::x() const {
  // @@protoc_insertion_point(field_get:platformcomms.Vector3D.X)
  return x_;
}
inline void Vector3D::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Vector3D.X)
}

// double Y = 2;
inline void Vector3D::clear_y() {
  y_ = 0;
}
inline double Vector3D::y() const {
  // @@protoc_insertion_point(field_get:platformcomms.Vector3D.Y)
  return y_;
}
inline void Vector3D::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Vector3D.Y)
}

// double Z = 3;
inline void Vector3D::clear_z() {
  z_ = 0;
}
inline double Vector3D::z() const {
  // @@protoc_insertion_point(field_get:platformcomms.Vector3D.Z)
  return z_;
}
inline void Vector3D::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Vector3D.Z)
}

// -------------------------------------------------------------------

// Map

// int32 ImageWidth = 2;
inline void Map::clear_imagewidth() {
  imagewidth_ = 0;
}
inline ::google::protobuf::int32 Map::imagewidth() const {
  // @@protoc_insertion_point(field_get:platformcomms.Map.ImageWidth)
  return imagewidth_;
}
inline void Map::set_imagewidth(::google::protobuf::int32 value) {
  
  imagewidth_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Map.ImageWidth)
}

// int32 ImageHeight = 3;
inline void Map::clear_imageheight() {
  imageheight_ = 0;
}
inline ::google::protobuf::int32 Map::imageheight() const {
  // @@protoc_insertion_point(field_get:platformcomms.Map.ImageHeight)
  return imageheight_;
}
inline void Map::set_imageheight(::google::protobuf::int32 value) {
  
  imageheight_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Map.ImageHeight)
}

// double Resolution = 4;
inline void Map::clear_resolution() {
  resolution_ = 0;
}
inline double Map::resolution() const {
  // @@protoc_insertion_point(field_get:platformcomms.Map.Resolution)
  return resolution_;
}
inline void Map::set_resolution(double value) {
  
  resolution_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Map.Resolution)
}

// .platformcomms.Vector3D Origin = 5;
inline bool Map::has_origin() const {
  return this != internal_default_instance() && origin_ != nullptr;
}
inline void Map::clear_origin() {
  if (GetArenaNoVirtual() == nullptr && origin_ != nullptr) {
    delete origin_;
  }
  origin_ = nullptr;
}
inline const ::platformcomms::Vector3D& Map::origin() const {
  const ::platformcomms::Vector3D* p = origin_;
  // @@protoc_insertion_point(field_get:platformcomms.Map.Origin)
  return p != nullptr ? *p : *reinterpret_cast<const ::platformcomms::Vector3D*>(
      &::platformcomms::_Vector3D_default_instance_);
}
inline ::platformcomms::Vector3D* Map::release_origin() {
  // @@protoc_insertion_point(field_release:platformcomms.Map.Origin)
  
  ::platformcomms::Vector3D* temp = origin_;
  origin_ = nullptr;
  return temp;
}
inline ::platformcomms::Vector3D* Map::mutable_origin() {
  
  if (origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::platformcomms::Vector3D>(GetArenaNoVirtual());
    origin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.Map.Origin)
  return origin_;
}
inline void Map::set_allocated_origin(::platformcomms::Vector3D* origin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete origin_;
  }
  if (origin) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      origin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    
  } else {
    
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Map.Origin)
}

// double LocalisationOccupiedThreshold = 6;
inline void Map::clear_localisationoccupiedthreshold() {
  localisationoccupiedthreshold_ = 0;
}
inline double Map::localisationoccupiedthreshold() const {
  // @@protoc_insertion_point(field_get:platformcomms.Map.LocalisationOccupiedThreshold)
  return localisationoccupiedthreshold_;
}
inline void Map::set_localisationoccupiedthreshold(double value) {
  
  localisationoccupiedthreshold_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Map.LocalisationOccupiedThreshold)
}

// double PathPlanningOccupiedThreshold = 7;
inline void Map::clear_pathplanningoccupiedthreshold() {
  pathplanningoccupiedthreshold_ = 0;
}
inline double Map::pathplanningoccupiedthreshold() const {
  // @@protoc_insertion_point(field_get:platformcomms.Map.PathPlanningOccupiedThreshold)
  return pathplanningoccupiedthreshold_;
}
inline void Map::set_pathplanningoccupiedthreshold(double value) {
  
  pathplanningoccupiedthreshold_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Map.PathPlanningOccupiedThreshold)
}

// -------------------------------------------------------------------

// Alert

// string Title = 1;
inline void Alert::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alert::title() const {
  // @@protoc_insertion_point(field_get:platformcomms.Alert.Title)
  return title_.GetNoArena();
}
inline void Alert::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platformcomms.Alert.Title)
}
#if LANG_CXX11
inline void Alert::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:platformcomms.Alert.Title)
}
#endif
inline void Alert::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platformcomms.Alert.Title)
}
inline void Alert::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platformcomms.Alert.Title)
}
inline ::std::string* Alert::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:platformcomms.Alert.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alert::release_title() {
  // @@protoc_insertion_point(field_release:platformcomms.Alert.Title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alert::set_allocated_title(::std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Alert.Title)
}

// int64 TimeStamp = 2;
inline void Alert::clear_timestamp() {
  timestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 Alert::timestamp() const {
  // @@protoc_insertion_point(field_get:platformcomms.Alert.TimeStamp)
  return timestamp_;
}
inline void Alert::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Alert.TimeStamp)
}

// string Topic = 3;
inline void Alert::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Alert::topic() const {
  // @@protoc_insertion_point(field_get:platformcomms.Alert.Topic)
  return topic_.GetNoArena();
}
inline void Alert::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:platformcomms.Alert.Topic)
}
#if LANG_CXX11
inline void Alert::set_topic(::std::string&& value) {
  
  topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:platformcomms.Alert.Topic)
}
#endif
inline void Alert::set_topic(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:platformcomms.Alert.Topic)
}
inline void Alert::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:platformcomms.Alert.Topic)
}
inline ::std::string* Alert::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:platformcomms.Alert.Topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Alert::release_topic() {
  // @@protoc_insertion_point(field_release:platformcomms.Alert.Topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Alert::set_allocated_topic(::std::string* topic) {
  if (topic != nullptr) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:platformcomms.Alert.Topic)
}

// .platformcomms.AlertLevel Severity = 4;
inline void Alert::clear_severity() {
  severity_ = 0;
}
inline ::platformcomms::AlertLevel Alert::severity() const {
  // @@protoc_insertion_point(field_get:platformcomms.Alert.Severity)
  return static_cast< ::platformcomms::AlertLevel >(severity_);
}
inline void Alert::set_severity(::platformcomms::AlertLevel value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.Alert.Severity)
}

// -------------------------------------------------------------------

// PlatformState

// .platformcomms.Status Status = 1;
inline void PlatformState::clear_status() {
  status_ = 0;
}
inline ::platformcomms::Status PlatformState::status() const {
  // @@protoc_insertion_point(field_get:platformcomms.PlatformState.Status)
  return static_cast< ::platformcomms::Status >(status_);
}
inline void PlatformState::set_status(::platformcomms::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.PlatformState.Status)
}

// .platformcomms.Pose AlertPose = 2;
inline bool PlatformState::has_alertpose() const {
  return this != internal_default_instance() && alertpose_ != nullptr;
}
inline void PlatformState::clear_alertpose() {
  if (GetArenaNoVirtual() == nullptr && alertpose_ != nullptr) {
    delete alertpose_;
  }
  alertpose_ = nullptr;
}
inline const ::platformcomms::Pose& PlatformState::alertpose() const {
  const ::platformcomms::Pose* p = alertpose_;
  // @@protoc_insertion_point(field_get:platformcomms.PlatformState.AlertPose)
  return p != nullptr ? *p : *reinterpret_cast<const ::platformcomms::Pose*>(
      &::platformcomms::_Pose_default_instance_);
}
inline ::platformcomms::Pose* PlatformState::release_alertpose() {
  // @@protoc_insertion_point(field_release:platformcomms.PlatformState.AlertPose)
  
  ::platformcomms::Pose* temp = alertpose_;
  alertpose_ = nullptr;
  return temp;
}
inline ::platformcomms::Pose* PlatformState::mutable_alertpose() {
  
  if (alertpose_ == nullptr) {
    auto* p = CreateMaybeMessage<::platformcomms::Pose>(GetArenaNoVirtual());
    alertpose_ = p;
  }
  // @@protoc_insertion_point(field_mutable:platformcomms.PlatformState.AlertPose)
  return alertpose_;
}
inline void PlatformState::set_allocated_alertpose(::platformcomms::Pose* alertpose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete alertpose_;
  }
  if (alertpose) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      alertpose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alertpose, submessage_arena);
    }
    
  } else {
    
  }
  alertpose_ = alertpose;
  // @@protoc_insertion_point(field_set_allocated:platformcomms.PlatformState.AlertPose)
}

// double LiftHeight = 3;
inline void PlatformState::clear_liftheight() {
  liftheight_ = 0;
}
inline double PlatformState::liftheight() const {
  // @@protoc_insertion_point(field_get:platformcomms.PlatformState.LiftHeight)
  return liftheight_;
}
inline void PlatformState::set_liftheight(double value) {
  
  liftheight_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.PlatformState.LiftHeight)
}

// bool Stable = 4;
inline void PlatformState::clear_stable() {
  stable_ = false;
}
inline bool PlatformState::stable() const {
  // @@protoc_insertion_point(field_get:platformcomms.PlatformState.Stable)
  return stable_;
}
inline void PlatformState::set_stable(bool value) {
  
  stable_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.PlatformState.Stable)
}

// float BatteryLevel = 5;
inline void PlatformState::clear_batterylevel() {
  batterylevel_ = 0;
}
inline float PlatformState::batterylevel() const {
  // @@protoc_insertion_point(field_get:platformcomms.PlatformState.BatteryLevel)
  return batterylevel_;
}
inline void PlatformState::set_batterylevel(float value) {
  
  batterylevel_ = value;
  // @@protoc_insertion_point(field_set:platformcomms.PlatformState.BatteryLevel)
}

// repeated .platformcomms.Alert Alerts = 6;
inline int PlatformState::alerts_size() const {
  return alerts_.size();
}
inline void PlatformState::clear_alerts() {
  alerts_.Clear();
}
inline ::platformcomms::Alert* PlatformState::mutable_alerts(int index) {
  // @@protoc_insertion_point(field_mutable:platformcomms.PlatformState.Alerts)
  return alerts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::platformcomms::Alert >*
PlatformState::mutable_alerts() {
  // @@protoc_insertion_point(field_mutable_list:platformcomms.PlatformState.Alerts)
  return &alerts_;
}
inline const ::platformcomms::Alert& PlatformState::alerts(int index) const {
  // @@protoc_insertion_point(field_get:platformcomms.PlatformState.Alerts)
  return alerts_.Get(index);
}
inline ::platformcomms::Alert* PlatformState::add_alerts() {
  // @@protoc_insertion_point(field_add:platformcomms.PlatformState.Alerts)
  return alerts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::platformcomms::Alert >&
PlatformState::alerts() const {
  // @@protoc_insertion_point(field_list:platformcomms.PlatformState.Alerts)
  return alerts_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace platformcomms

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::platformcomms::AlertLevel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::platformcomms::AlertLevel>() {
  return ::platformcomms::AlertLevel_descriptor();
}
template <> struct is_proto_enum< ::platformcomms::Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::platformcomms::Status>() {
  return ::platformcomms::Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_platformCommunications_2eproto
